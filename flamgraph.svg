<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="918.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="901" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="901" > </text>
<g id="frames">
<g >
<title>nf_nat_inet_fn (10,703,892 samples, 0.60%)</title><rect x="41.1" y="389" width="7.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="44.14" y="399.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::basic_json&lt;char const  (12,220,606 samples, 0.69%)</title><rect x="818.3" y="533" width="8.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="821.27" y="543.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (12,827,672 samples, 0.72%)</title><rect x="701.2" y="53" width="8.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="704.23" y="63.5" ></text>
</g>
<g >
<title>mmap_region (30,186,033 samples, 1.70%)</title><rect x="10.0" y="597" width="20.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>DatabaseManager::getRoomMessages (39,219,433 samples, 2.21%)</title><rect x="492.2" y="549" width="26.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="495.20" y="559.5" >D..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12,393,635 samples, 0.70%)</title><rect x="1168.7" y="501" width="8.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1171.65" y="511.5" ></text>
</g>
<g >
<title>utils::Logger::enqueueLogMessage (58,733,184 samples, 3.32%)</title><rect x="1038.0" y="613" width="39.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1040.99" y="623.5" >uti..</text>
</g>
<g >
<title>std::filesystem::exists (12,393,635 samples, 0.70%)</title><rect x="1168.7" y="565" width="8.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1171.65" y="575.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (9,763,438 samples, 0.55%)</title><rect x="928.5" y="485" width="6.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="931.53" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_buckets (9,763,438 samples, 0.55%)</title><rect x="928.5" y="533" width="6.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="931.53" y="543.5" ></text>
</g>
<g >
<title>sqlite3RunParser (11,101,656 samples, 0.63%)</title><rect x="518.3" y="485" width="7.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="521.33" y="495.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (11,017,951 samples, 0.62%)</title><rect x="687.7" y="469" width="7.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="690.71" y="479.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (12,550,539 samples, 0.71%)</title><rect x="289.8" y="373" width="8.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="292.77" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;int const, std::shared_ptr&lt;reactor::Channel&gt; &gt;, false&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::shared_ptr&lt;reactor::Channel&gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (10,558,212 samples, 0.60%)</title><rect x="1084.4" y="581" width="7.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1087.40" y="591.5" ></text>
</g>
<g >
<title>lookup_fast (11,736,476 samples, 0.66%)</title><rect x="1069.3" y="341" width="7.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1072.31" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::allocate (12,827,672 samples, 0.72%)</title><rect x="701.2" y="101" width="8.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="704.23" y="111.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::~basic_json (148,504,835 samples, 8.39%)</title><rect x="719.3" y="549" width="99.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="722.33" y="559.5" >nlohmann::j..</text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;nlohmann::json_abi_v3_11_2::detail::output_string_adapter&lt;char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;void&gt;,  (11,017,951 samples, 0.62%)</title><rect x="687.7" y="453" width="7.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="690.71" y="463.5" ></text>
</g>
<g >
<title>inet_sendmsg (146,979,909 samples, 8.30%)</title><rect x="114.1" y="533" width="97.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="117.08" y="543.5" >inet_sendmsg</text>
</g>
<g >
<title>__do_sys_newfstatat (12,393,635 samples, 0.70%)</title><rect x="1168.7" y="437" width="8.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1171.65" y="447.5" ></text>
</g>
<g >
<title>utils::Logger::LogStream::~LogStream (12,393,635 samples, 0.70%)</title><rect x="1168.7" y="629" width="8.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1171.65" y="639.5" ></text>
</g>
<g >
<title>__libc_start_main@@GLIBC_2.34 (1,740,802,400 samples, 98.29%)</title><rect x="30.1" y="821" width="1159.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="33.11" y="831.5" >__libc_start_main@@GLIBC_2.34</text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (24,856,185 samples, 1.40%)</title><rect x="298.1" y="373" width="16.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="301.14" y="383.5" ></text>
</g>
<g >
<title>std::filesystem::exists (20,565,994 samples, 1.16%)</title><rect x="1063.4" y="565" width="13.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1066.42" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (28,219,837 samples, 1.59%)</title><rect x="314.7" y="357" width="18.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="317.70" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (29,638,396 samples, 1.67%)</title><rect x="451.2" y="373" width="19.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="454.19" y="383.5" ></text>
</g>
<g >
<title>__asan::asan_malloc (12,534,853 samples, 0.71%)</title><rect x="281.4" y="357" width="8.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="284.42" y="367.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::json_value::destroy (11,463,602 samples, 0.65%)</title><rect x="719.3" y="501" width="7.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="722.33" y="511.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::detail::json_ref&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::json_ref&lt;char const  (12,220,606 samples, 0.69%)</title><rect x="818.3" y="549" width="8.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="821.27" y="559.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (12,534,853 samples, 0.71%)</title><rect x="281.4" y="149" width="8.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="284.42" y="159.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::deallocate (11,463,602 samples, 0.65%)</title><rect x="719.3" y="485" width="7.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="722.33" y="495.5" ></text>
</g>
<g >
<title>x64_sys_call (24,856,185 samples, 1.40%)</title><rect x="298.1" y="309" width="16.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="301.14" y="319.5" ></text>
</g>
<g >
<title>fdatasync (12,983,089 samples, 0.73%)</title><rect x="569.1" y="405" width="8.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="572.07" y="415.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (12,513,175 samples, 0.71%)</title><rect x="298.1" y="69" width="8.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="301.14" y="79.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::detail::output_adapter&lt;char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::output_adapter (11,017,951 samples, 0.62%)</title><rect x="687.7" y="533" width="7.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="690.71" y="543.5" ></text>
</g>
<g >
<title>file_modified (24,856,185 samples, 1.40%)</title><rect x="298.1" y="229" width="16.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="301.14" y="239.5" ></text>
</g>
<g >
<title>operator delete (11,776,536 samples, 0.66%)</title><rect x="248.2" y="581" width="7.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="251.19" y="591.5" ></text>
</g>
<g >
<title>iommu_dma_map_sg (166,484,529 samples, 9.40%)</title><rect x="333.5" y="69" width="110.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="336.50" y="79.5" >iommu_dma_map..</text>
</g>
<g >
<title>DatabaseManager::getRooms[abi:cxx11] (44,206,840 samples, 2.50%)</title><rect x="533.5" y="549" width="29.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="536.52" y="559.5" >Da..</text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::pair (27,159,238 samples, 1.53%)</title><rect x="701.2" y="309" width="18.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="704.23" y="319.5" ></text>
</g>
<g >
<title>__libc_pwrite (12,550,539 samples, 0.71%)</title><rect x="289.8" y="357" width="8.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="292.77" y="367.5" ></text>
</g>
<g >
<title>utils::Logger::LogStream::~LogStream (103,978,845 samples, 5.87%)</title><rect x="859.3" y="549" width="69.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="862.25" y="559.5" >utils::..</text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::~basic_json (126,320,182 samples, 7.13%)</title><rect x="727.0" y="437" width="84.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="729.96" y="447.5" >nlohmann:..</text>
</g>
<g >
<title>vfs_statx (11,736,476 samples, 0.66%)</title><rect x="1069.3" y="405" width="7.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1072.31" y="415.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::path&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::filesystem::__cxx11::path&gt; (13,796,571 samples, 0.78%)</title><rect x="919.3" y="485" width="9.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="922.34" y="495.5" ></text>
</g>
<g >
<title>ext4_free_inode (14,134,512 samples, 0.80%)</title><rect x="451.2" y="245" width="9.4" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="454.19" y="255.5" ></text>
</g>
<g >
<title>ext4_inode_csum (12,513,175 samples, 0.71%)</title><rect x="298.1" y="85" width="8.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="301.14" y="95.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (20,565,994 samples, 1.16%)</title><rect x="1063.4" y="437" width="13.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1066.42" y="447.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (60,460,773 samples, 3.41%)</title><rect x="171.7" y="149" width="40.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="174.72" y="159.5" >__n..</text>
</g>
<g >
<title>tcp_v4_fill_cb (11,670,209 samples, 0.66%)</title><rect x="198.5" y="53" width="7.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="201.48" y="63.5" ></text>
</g>
<g >
<title>__tzfile_compute (15,214,057 samples, 0.86%)</title><rect x="841.3" y="485" width="10.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="844.28" y="495.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (15,218,689 samples, 0.86%)</title><rect x="263.6" y="485" width="10.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="266.59" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate (140,496,178 samples, 7.93%)</title><rect x="577.7" y="389" width="93.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="580.72" y="399.5" >std::_Vecto..</text>
</g>
<g >
<title>__send (146,979,909 samples, 8.30%)</title><rect x="114.1" y="629" width="97.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="117.08" y="639.5" >__send</text>
</g>
<g >
<title>filename_lookup (11,736,476 samples, 0.66%)</title><rect x="1069.3" y="389" width="7.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1072.31" y="399.5" ></text>
</g>
<g >
<title>sqlite3ResolveExprNames (15,218,689 samples, 0.86%)</title><rect x="263.6" y="373" width="10.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="266.59" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11,208,970 samples, 0.63%)</title><rect x="541.1" y="437" width="7.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="544.11" y="447.5" ></text>
</g>
<g >
<title>schedule (35,540,416 samples, 2.01%)</title><rect x="76.1" y="597" width="23.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="79.09" y="607.5" >s..</text>
</g>
<g >
<title>handle_mm_fault (9,149,179 samples, 0.52%)</title><rect x="563.0" y="261" width="6.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="565.97" y="271.5" ></text>
</g>
<g >
<title>restore_fpregs_from_fpstate (1,292,739 samples, 0.07%)</title><rect x="51.0" y="661" width="0.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="54.03" y="671.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (60,460,773 samples, 3.41%)</title><rect x="171.7" y="437" width="40.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="174.72" y="447.5" >__t..</text>
</g>
<g >
<title>ext4_da_write_begin (12,550,539 samples, 0.71%)</title><rect x="289.8" y="213" width="8.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="292.77" y="223.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (9,763,438 samples, 0.55%)</title><rect x="928.5" y="629" width="6.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="931.53" y="639.5" ></text>
</g>
<g >
<title>sqlite3_step (10,300,753 samples, 0.58%)</title><rect x="485.3" y="533" width="6.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="488.34" y="543.5" ></text>
</g>
<g >
<title>x64_sys_call (28,566,785 samples, 1.61%)</title><rect x="1044.4" y="453" width="19.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1047.39" y="463.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (13,808,217 samples, 0.78%)</title><rect x="1044.4" y="389" width="9.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1047.39" y="399.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (11,685,308 samples, 0.66%)</title><rect x="525.7" y="405" width="7.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="528.73" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (11,208,970 samples, 0.63%)</title><rect x="541.1" y="421" width="7.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="544.11" y="431.5" ></text>
</g>
<g >
<title>ip_queue_xmit (60,460,773 samples, 3.41%)</title><rect x="171.7" y="421" width="40.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="174.72" y="431.5" >ip_..</text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::basic_json (12,827,672 samples, 0.72%)</title><rect x="701.2" y="149" width="8.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="704.23" y="159.5" ></text>
</g>
<g >
<title>sqlite3_exec (22,132,268 samples, 1.25%)</title><rect x="563.0" y="517" width="14.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="565.97" y="527.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (12,337,001 samples, 0.70%)</title><rect x="1021.9" y="517" width="8.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1024.87" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (11,685,308 samples, 0.66%)</title><rect x="525.7" y="469" width="7.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="528.73" y="479.5" ></text>
</g>
<g >
<title>search_binary_handler (30,186,033 samples, 1.70%)</title><rect x="10.0" y="693" width="20.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (10,558,212 samples, 0.60%)</title><rect x="1084.4" y="517" width="7.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1087.40" y="527.5" ></text>
</g>
<g >
<title>__blk_flush_plug (166,484,529 samples, 9.40%)</title><rect x="333.5" y="197" width="110.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="336.50" y="207.5" >__blk_flush_p..</text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (11,208,970 samples, 0.63%)</title><rect x="541.1" y="469" width="7.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="544.11" y="479.5" ></text>
</g>
<g >
<title>file_write_and_wait_range (166,484,529 samples, 9.40%)</title><rect x="333.5" y="309" width="110.9" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="336.50" y="319.5" >file_write_an..</text>
</g>
<g >
<title>__sanitizer::MmapFixedImpl (12,534,853 samples, 0.71%)</title><rect x="281.4" y="261" width="8.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="284.42" y="271.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (126,320,182 samples, 7.13%)</title><rect x="727.0" y="405" width="84.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="729.96" y="415.5" >__asan_st..</text>
</g>
<g >
<title>tcp_rcv_established (9,791,252 samples, 0.55%)</title><rect x="192.0" y="37" width="6.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="194.96" y="47.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (9,390,465 samples, 0.53%)</title><rect x="221.2" y="629" width="6.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="224.22" y="639.5" ></text>
</g>
<g >
<title>sqlite3Malloc (12,534,853 samples, 0.71%)</title><rect x="281.4" y="405" width="8.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="284.42" y="415.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (51,828,327 samples, 2.93%)</title><rect x="171.7" y="85" width="34.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="174.72" y="95.5" >ip..</text>
</g>
<g >
<title>file_write_and_wait_range (16,417,507 samples, 0.93%)</title><rect x="322.6" y="293" width="10.9" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="325.56" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,867,452 samples, 0.50%)</title><rect x="913.4" y="437" width="5.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="916.43" y="447.5" ></text>
</g>
<g >
<title>generic_perform_write (12,550,539 samples, 0.71%)</title><rect x="289.8" y="229" width="8.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="292.77" y="239.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::map (27,159,238 samples, 1.53%)</title><rect x="701.2" y="453" width="18.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="704.23" y="463.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (13,803,037 samples, 0.78%)</title><rect x="30.1" y="709" width="9.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="33.11" y="719.5" ></text>
</g>
<g >
<title>decltype  (11,890,697 samples, 0.67%)</title><rect x="826.4" y="517" width="7.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="829.41" y="527.5" ></text>
</g>
<g >
<title>blk_mq_flush_plug_list.part.0 (166,484,529 samples, 9.40%)</title><rect x="333.5" y="165" width="110.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="336.50" y="175.5" >blk_mq_flush_..</text>
</g>
<g >
<title>sqlite3RunParser (10,300,709 samples, 0.58%)</title><rect x="478.5" y="485" width="6.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="481.48" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11,311,012 samples, 0.64%)</title><rect x="470.9" y="373" width="7.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="473.94" y="383.5" ></text>
</g>
<g >
<title>__ip_finish_output (60,460,773 samples, 3.41%)</title><rect x="171.7" y="341" width="40.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="174.72" y="351.5" >__i..</text>
</g>
<g >
<title>std::filesystem::status (20,565,994 samples, 1.16%)</title><rect x="1063.4" y="533" width="13.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1066.42" y="543.5" ></text>
</g>
<g >
<title>utils::Logger::enqueueLogMessage (12,393,635 samples, 0.70%)</title><rect x="1168.7" y="613" width="8.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1171.65" y="623.5" ></text>
</g>
<g >
<title>ext4_fc_commit (11,802,330 samples, 0.67%)</title><rect x="314.7" y="293" width="7.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="317.70" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (11,406,039 samples, 0.64%)</title><rect x="106.5" y="597" width="7.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="109.48" y="607.5" ></text>
</g>
<g >
<title>operator new (12,827,672 samples, 0.72%)</title><rect x="701.2" y="85" width="8.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="704.23" y="95.5" ></text>
</g>
<g >
<title>utils::Logger::rotateLogFileIfNeeded (12,393,635 samples, 0.70%)</title><rect x="1168.7" y="581" width="8.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1171.65" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (146,979,909 samples, 8.30%)</title><rect x="114.1" y="565" width="97.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="117.08" y="575.5" >__x64_sys_s..</text>
</g>
<g >
<title>x64_sys_call (28,219,837 samples, 1.59%)</title><rect x="314.7" y="341" width="18.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="317.70" y="351.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (9,791,252 samples, 0.55%)</title><rect x="192.0" y="53" width="6.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="194.96" y="63.5" ></text>
</g>
<g >
<title>epoll_wait (77,289,461 samples, 4.36%)</title><rect x="48.3" y="741" width="51.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="51.27" y="751.5" >epoll..</text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; const*, std::vector&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::allocator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; (12,827,672 samples, 0.72%)</title><rect x="701.2" y="213" width="8.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="704.23" y="223.5" ></text>
</g>
<g >
<title>sqlite3_finalize (10,423,566 samples, 0.59%)</title><rect x="834.3" y="549" width="7.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="837.34" y="559.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::assert_invariant (12,220,606 samples, 0.69%)</title><rect x="818.3" y="453" width="8.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="821.27" y="463.5" ></text>
</g>
<g >
<title>__close (10,703,892 samples, 0.60%)</title><rect x="41.1" y="741" width="7.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="44.14" y="751.5" ></text>
</g>
<g >
<title>can_modify_mm (30,186,033 samples, 1.70%)</title><rect x="10.0" y="565" width="20.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>__filemap_fdatawait_range (16,417,507 samples, 0.93%)</title><rect x="322.6" y="277" width="10.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="325.56" y="287.5" ></text>
</g>
<g >
<title>ip_rcv (60,460,773 samples, 3.41%)</title><rect x="171.7" y="133" width="40.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="174.72" y="143.5" >ip_..</text>
</g>
<g >
<title>do_writepages (12,983,089 samples, 0.73%)</title><rect x="569.1" y="261" width="8.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="572.07" y="271.5" ></text>
</g>
<g >
<title>exc_page_fault (9,149,179 samples, 0.52%)</title><rect x="563.0" y="293" width="6.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="565.97" y="303.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (28,566,785 samples, 1.61%)</title><rect x="1044.4" y="533" width="19.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1047.39" y="543.5" ></text>
</g>
<g >
<title>ext4_sync_file (166,484,529 samples, 9.40%)</title><rect x="333.5" y="325" width="110.9" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="336.50" y="335.5" >ext4_sync_file</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt; (13,796,571 samples, 0.78%)</title><rect x="919.3" y="469" width="9.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="922.34" y="479.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (13,982,366 samples, 0.79%)</title><rect x="509.0" y="533" width="9.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="512.02" y="543.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::dump (20,297,616 samples, 1.15%)</title><rect x="687.7" y="549" width="13.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="690.71" y="559.5" ></text>
</g>
<g >
<title>x64_sys_call (146,979,909 samples, 8.30%)</title><rect x="114.1" y="581" width="97.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="117.08" y="591.5" >x64_sys_call</text>
</g>
<g >
<title>__schedule (35,540,416 samples, 2.01%)</title><rect x="76.1" y="581" width="23.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="79.09" y="591.5" >_..</text>
</g>
<g >
<title>__ext4_get_inode_loc (12,343,010 samples, 0.70%)</title><rect x="306.5" y="117" width="8.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="309.47" y="127.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (12,513,175 samples, 0.71%)</title><rect x="298.1" y="133" width="8.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="301.14" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node::operator (27,159,238 samples, 1.53%)</title><rect x="701.2" y="357" width="18.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="704.23" y="367.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, ChatroomServerEpoll::handleNewConnection (1,466,911,618 samples, 82.83%)</title><rect x="99.8" y="677" width="977.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="102.77" y="687.5" >void std::__invoke_impl&lt;void, ChatroomServerEpoll::handleNewConnection</text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (115,900,252 samples, 6.54%)</title><rect x="1091.4" y="613" width="77.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1094.43" y="623.5" >std::bas..</text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, ChatroomServerEpoll::setupRoutes (998,010,757 samples, 56.35%)</title><rect x="263.6" y="597" width="664.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="266.59" y="607.5" >std::enable_if&lt;is_invocable_r_v&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, st..</text>
</g>
<g >
<title>__inet_lookup_established (17,352,997 samples, 0.98%)</title><rect x="180.4" y="53" width="11.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="183.39" y="63.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (11,101,656 samples, 0.63%)</title><rect x="518.3" y="517" width="7.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="521.33" y="527.5" ></text>
</g>
<g >
<title>__libc_fcntl64 (11,311,012 samples, 0.64%)</title><rect x="470.9" y="405" width="7.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="473.94" y="415.5" ></text>
</g>
<g >
<title>sqlite3BtreeCommitPhaseTwo (10,025,997 samples, 0.57%)</title><rect x="556.3" y="485" width="6.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="559.29" y="495.5" ></text>
</g>
<g >
<title>evict (29,638,396 samples, 1.67%)</title><rect x="451.2" y="277" width="19.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="454.19" y="287.5" ></text>
</g>
<g >
<title>process_backlog (60,460,773 samples, 3.41%)</title><rect x="171.7" y="181" width="40.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="174.72" y="191.5" >pro..</text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (11,400,045 samples, 0.64%)</title><rect x="533.5" y="501" width="7.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="536.52" y="511.5" ></text>
</g>
<g >
<title>elf_load (30,186,033 samples, 1.70%)</title><rect x="10.0" y="661" width="20.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;reactor::Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;reactor::Channel&gt; &gt; &gt; &gt;::operator[] (10,558,212 samples, 0.60%)</title><rect x="1084.4" y="629" width="7.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1087.40" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (119,436,577 samples, 6.74%)</title><rect x="935.0" y="581" width="79.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="938.04" y="591.5" >std::__de..</text>
</g>
<g >
<title>reactor::Epoller::wait (19,573,202 samples, 1.11%)</title><rect x="1176.9" y="741" width="13.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.91" y="751.5" ></text>
</g>
<g >
<title>sqlite3Malloc (9,149,179 samples, 0.52%)</title><rect x="563.0" y="389" width="6.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="565.97" y="399.5" ></text>
</g>
<g >
<title>sqlite3_exec (307,310,530 samples, 17.35%)</title><rect x="273.7" y="501" width="204.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="276.73" y="511.5" >sqlite3_exec</text>
</g>
<g >
<title>ip_output (10,703,892 samples, 0.60%)</title><rect x="41.1" y="437" width="7.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="44.14" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (81,314,822 samples, 4.59%)</title><rect x="859.3" y="517" width="54.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="862.25" y="527.5" >std::..</text>
</g>
<g >
<title>sqlite3PagerCommitPhaseOne (12,983,089 samples, 0.73%)</title><rect x="569.1" y="437" width="8.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="572.07" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (24,197,220 samples, 1.37%)</title><rect x="1021.9" y="597" width="16.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1024.87" y="607.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (11,334,456 samples, 0.64%)</title><rect x="256.0" y="613" width="7.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="259.04" y="623.5" ></text>
</g>
<g >
<title>decltype  (12,220,606 samples, 0.69%)</title><rect x="818.3" y="517" width="8.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="821.27" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_write (28,566,785 samples, 1.61%)</title><rect x="1044.4" y="437" width="19.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1047.39" y="447.5" ></text>
</g>
<g >
<title>dequeue_task (10,691,284 samples, 0.60%)</title><rect x="84.7" y="565" width="7.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="87.65" y="575.5" ></text>
</g>
<g >
<title>fdatasync (28,219,837 samples, 1.59%)</title><rect x="314.7" y="389" width="18.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="317.70" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; const&amp;&gt; (27,159,238 samples, 1.53%)</title><rect x="701.2" y="341" width="18.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="704.23" y="351.5" ></text>
</g>
<g >
<title>ext4_da_write_end (13,808,217 samples, 0.78%)</title><rect x="1044.4" y="341" width="9.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1047.39" y="351.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (10,897,356 samples, 0.62%)</title><rect x="1014.6" y="597" width="7.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1017.61" y="607.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (283,226,684 samples, 15.99%)</title><rect x="289.8" y="469" width="188.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="292.77" y="479.5" >sqlite3VdbeExec</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::push_back (13,241,105 samples, 0.75%)</title><rect x="671.3" y="437" width="8.8" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="674.32" y="447.5" ></text>
</g>
<g >
<title>sqlite3PagerCommitPhaseOne (219,560,551 samples, 12.40%)</title><rect x="298.1" y="421" width="146.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="301.14" y="431.5" >sqlite3PagerCommit..</text>
</g>
<g >
<title>std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt;::is_open (9,600,405 samples, 0.54%)</title><rect x="1038.0" y="597" width="6.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1040.99" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (20,565,994 samples, 1.16%)</title><rect x="1063.4" y="485" width="13.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1066.42" y="495.5" ></text>
</g>
<g >
<title>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (11,334,456 samples, 0.64%)</title><rect x="256.0" y="629" width="7.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="259.04" y="639.5" ></text>
</g>
<g >
<title>bdev_getblk (12,343,010 samples, 0.70%)</title><rect x="306.5" y="101" width="8.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="309.47" y="111.5" ></text>
</g>
<g >
<title>void std::_Construct&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; const&amp;&gt; (12,827,672 samples, 0.72%)</title><rect x="701.2" y="165" width="8.6" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="704.23" y="175.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; const&amp;&gt; (27,159,238 samples, 1.53%)</title><rect x="701.2" y="325" width="18.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="704.23" y="335.5" ></text>
</g>
<g >
<title>blk_finish_plug (12,983,089 samples, 0.73%)</title><rect x="569.1" y="213" width="8.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="572.07" y="223.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (13,808,217 samples, 0.78%)</title><rect x="1044.4" y="293" width="9.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1047.39" y="303.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, ChatroomServerEpoll::handleNewConnection (1,466,911,618 samples, 82.83%)</title><rect x="99.8" y="693" width="977.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="102.77" y="703.5" >std::enable_if&lt;is_invocable_r_v&lt;void, ChatroomServerEpoll::handleNewConnection</text>
</g>
<g >
<title>x64_sys_call (71,858,831 samples, 4.06%)</title><rect x="51.9" y="693" width="47.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="54.89" y="703.5" >x64_..</text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::back (13,241,105 samples, 0.75%)</title><rect x="671.3" y="405" width="8.8" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="674.32" y="415.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (13,982,366 samples, 0.79%)</title><rect x="509.0" y="517" width="9.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="512.02" y="527.5" ></text>
</g>
<g >
<title>tcp_write_xmit (10,703,892 samples, 0.60%)</title><rect x="41.1" y="517" width="7.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="44.14" y="527.5" ></text>
</g>
<g >
<title>folio_alloc_noprof (12,550,539 samples, 0.71%)</title><rect x="289.8" y="165" width="8.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="292.77" y="175.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::json_value::destroy (126,320,182 samples, 7.13%)</title><rect x="727.0" y="421" width="84.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="729.96" y="431.5" >nlohmann:..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (11,890,697 samples, 0.67%)</title><rect x="826.4" y="405" width="7.9" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="829.41" y="415.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (11,776,536 samples, 0.66%)</title><rect x="248.2" y="549" width="7.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="251.19" y="559.5" ></text>
</g>
<g >
<title>___interceptor_vsnprintf (11,760,496 samples, 0.66%)</title><rect x="851.4" y="501" width="7.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="854.42" y="511.5" ></text>
</g>
<g >
<title>void nlohmann::json_abi_v3_11_2::detail::external_constructor&lt; (11,890,697 samples, 0.67%)</title><rect x="826.4" y="469" width="7.9" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="829.41" y="479.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (11,208,970 samples, 0.63%)</title><rect x="541.1" y="213" width="7.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="544.11" y="223.5" ></text>
</g>
<g >
<title>sqlite3_step (25,237,067 samples, 1.42%)</title><rect x="492.2" y="533" width="16.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="495.20" y="543.5" ></text>
</g>
<g >
<title>sqlite3BtreeCommitPhaseTwo (39,804,582 samples, 2.25%)</title><rect x="444.4" y="437" width="26.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="447.42" y="447.5" >s..</text>
</g>
<g >
<title>mas_find (12,534,853 samples, 0.71%)</title><rect x="281.4" y="101" width="8.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="284.42" y="111.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::detail::lexer&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, nlohmann::json_abi_v3_11_2::detail::iterator_input_adapter&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::get (140,496,178 samples, 7.93%)</title><rect x="577.7" y="453" width="93.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="580.72" y="463.5" >nlohmann::j..</text>
</g>
<g >
<title>tcp_send_fin (10,703,892 samples, 0.60%)</title><rect x="41.1" y="549" width="7.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="44.14" y="559.5" ></text>
</g>
<g >
<title>__sanitizer::IsRssLimitExceeded (11,860,219 samples, 0.67%)</title><rect x="1030.1" y="533" width="7.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1033.09" y="543.5" ></text>
</g>
<g >
<title>std::filesystem::status (12,393,635 samples, 0.70%)</title><rect x="1168.7" y="533" width="8.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1171.65" y="543.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::json_value::destroy (11,347,332 samples, 0.64%)</title><rect x="680.1" y="517" width="7.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="683.15" y="527.5" ></text>
</g>
<g >
<title>utils::Logger::LogStream::LogStream (115,900,252 samples, 6.54%)</title><rect x="1091.4" y="629" width="77.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1094.43" y="639.5" >utils::L..</text>
</g>
<g >
<title>do_syscall_64 (28,566,785 samples, 1.61%)</title><rect x="1044.4" y="469" width="19.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1047.39" y="479.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (9,149,179 samples, 0.52%)</title><rect x="563.0" y="437" width="6.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="565.97" y="447.5" ></text>
</g>
<g >
<title>utils::Logger::enqueueLogMessage (13,796,571 samples, 0.78%)</title><rect x="919.3" y="533" width="9.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="922.34" y="543.5" ></text>
</g>
<g >
<title>reactor::Epoller::addFd (10,915,987 samples, 0.62%)</title><rect x="1077.1" y="613" width="7.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1080.13" y="623.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (32,806,795 samples, 1.85%)</title><rect x="541.1" y="517" width="21.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="544.11" y="527.5" >s..</text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (11,208,970 samples, 0.63%)</title><rect x="541.1" y="501" width="7.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="544.11" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_fcntl (11,311,012 samples, 0.64%)</title><rect x="470.9" y="325" width="7.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="473.94" y="335.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;nlohmann::json_abi_v3_11_2::detail::output_string_adapter&lt;char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;,  (11,017,951 samples, 0.62%)</title><rect x="687.7" y="485" width="7.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="690.71" y="495.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (8,929,795 samples, 0.50%)</title><rect x="1184.0" y="725" width="6.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1187.00" y="735.5" ></text>
</g>
<g >
<title>ip_queue_xmit (10,703,892 samples, 0.60%)</title><rect x="41.1" y="485" width="7.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="44.14" y="495.5" ></text>
</g>
<g >
<title>___interceptor_malloc (12,534,853 samples, 0.71%)</title><rect x="281.4" y="373" width="8.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="284.42" y="383.5" ></text>
</g>
<g >
<title>__sys_sendto (146,979,909 samples, 8.30%)</title><rect x="114.1" y="549" width="97.9" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="117.08" y="559.5" >__sys_sendto</text>
</g>
<g >
<title>__find_get_block (12,343,010 samples, 0.70%)</title><rect x="306.5" y="85" width="8.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="309.47" y="95.5" ></text>
</g>
<g >
<title>___interceptor_memcpy (14,331,566 samples, 0.81%)</title><rect x="709.8" y="277" width="9.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="712.78" y="287.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (12,343,010 samples, 0.70%)</title><rect x="306.5" y="149" width="8.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="309.47" y="159.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (14,331,566 samples, 0.81%)</title><rect x="709.8" y="293" width="9.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="712.78" y="303.5" ></text>
</g>
<g >
<title>utils::Logger::writeLogToFile (12,393,635 samples, 0.70%)</title><rect x="1168.7" y="597" width="8.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1171.65" y="607.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (22,132,268 samples, 1.25%)</title><rect x="563.0" y="485" width="14.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="565.97" y="495.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (10,300,709 samples, 0.58%)</title><rect x="478.5" y="501" width="6.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="481.48" y="511.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (60,460,773 samples, 3.41%)</title><rect x="171.7" y="261" width="40.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="174.72" y="271.5" >do_..</text>
</g>
<g >
<title>ext4_writepages (166,484,529 samples, 9.40%)</title><rect x="333.5" y="245" width="110.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="336.50" y="255.5" >ext4_writepages</text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (9,149,179 samples, 0.52%)</title><rect x="563.0" y="453" width="6.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="565.97" y="463.5" ></text>
</g>
<g >
<title>sqlite3BtreeCommitPhaseOne (219,560,551 samples, 12.40%)</title><rect x="298.1" y="437" width="146.3" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="301.14" y="447.5" >sqlite3BtreeCommit..</text>
</g>
<g >
<title>__asan::Allocator::Allocate (12,534,853 samples, 0.71%)</title><rect x="281.4" y="341" width="8.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="284.42" y="351.5" ></text>
</g>
<g >
<title>file_tty_write.isra.0 (8,867,452 samples, 0.50%)</title><rect x="913.4" y="325" width="5.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="916.43" y="335.5" ></text>
</g>
<g >
<title>sqlite3ParserAlloc (12,534,853 samples, 0.71%)</title><rect x="281.4" y="421" width="8.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="284.42" y="431.5" ></text>
</g>
<g >
<title>x64_sys_call (10,703,892 samples, 0.60%)</title><rect x="41.1" y="693" width="7.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="44.14" y="703.5" ></text>
</g>
<g >
<title>ext4_evict_inode (29,638,396 samples, 1.67%)</title><rect x="451.2" y="261" width="19.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="454.19" y="271.5" ></text>
</g>
<g >
<title>sqlite3_step (32,806,795 samples, 1.85%)</title><rect x="541.1" y="533" width="21.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="544.11" y="543.5" >s..</text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; const*, std::vector&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::allocator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; (12,827,672 samples, 0.72%)</title><rect x="701.2" y="181" width="8.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="704.23" y="191.5" ></text>
</g>
<g >
<title>vfs_write (8,867,452 samples, 0.50%)</title><rect x="913.4" y="357" width="5.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="916.43" y="367.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::detail::serializer&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::dump (9,279,665 samples, 0.52%)</title><rect x="695.0" y="517" width="6.2" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="698.05" y="527.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; const*, std::vector&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::allocator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; (12,827,672 samples, 0.72%)</title><rect x="701.2" y="197" width="8.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="704.23" y="207.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::detail::lexer&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, nlohmann::json_abi_v3_11_2::detail::iterator_input_adapter&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::scan_string (153,737,283 samples, 8.68%)</title><rect x="577.7" y="469" width="102.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="580.72" y="479.5" >nlohmann::js..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20,565,994 samples, 1.16%)</title><rect x="1063.4" y="501" width="13.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1066.42" y="511.5" ></text>
</g>
<g >
<title>sqlite3BtreeCloseCursor (11,571,828 samples, 0.65%)</title><rect x="548.6" y="485" width="7.7" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="551.58" y="495.5" ></text>
</g>
<g >
<title>__asan::asan_malloc (10,300,709 samples, 0.58%)</title><rect x="478.5" y="405" width="6.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="481.48" y="415.5" ></text>
</g>
<g >
<title>__filemap_get_folio (12,550,539 samples, 0.71%)</title><rect x="289.8" y="197" width="8.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="292.77" y="207.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (13,808,217 samples, 0.78%)</title><rect x="1044.4" y="309" width="9.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1047.39" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (146,979,909 samples, 8.30%)</title><rect x="114.1" y="613" width="97.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="117.08" y="623.5" >entry_SYSCA..</text>
</g>
<g >
<title>psi_task_switch (11,926,125 samples, 0.67%)</title><rect x="91.8" y="565" width="8.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="94.82" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_pwrite64 (24,856,185 samples, 1.40%)</title><rect x="298.1" y="293" width="16.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="301.14" y="303.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (12,343,010 samples, 0.70%)</title><rect x="306.5" y="133" width="8.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="309.47" y="143.5" ></text>
</g>
<g >
<title>filemap_alloc_folio_noprof (12,550,539 samples, 0.71%)</title><rect x="289.8" y="181" width="8.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="292.77" y="191.5" ></text>
</g>
<g >
<title>do_mmap (30,186,033 samples, 1.70%)</title><rect x="10.0" y="613" width="20.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>utils::Logger::rotateLogFileIfNeeded (13,796,571 samples, 0.78%)</title><rect x="919.3" y="501" width="9.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="922.34" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (119,436,577 samples, 6.74%)</title><rect x="935.0" y="549" width="79.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="938.04" y="559.5" >std::pair..</text>
</g>
<g >
<title>x64_sys_call (30,186,033 samples, 1.70%)</title><rect x="10.0" y="789" width="20.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; (126,320,182 samples, 7.13%)</title><rect x="727.0" y="485" width="84.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="729.96" y="495.5" >void std:..</text>
</g>
<g >
<title>__asan::asan_memalign (81,314,822 samples, 4.59%)</title><rect x="859.3" y="469" width="54.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="862.25" y="479.5" >__asa..</text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (11,101,656 samples, 0.63%)</title><rect x="518.3" y="501" width="7.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="521.33" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::allocator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::end (10,721,051 samples, 0.61%)</title><rect x="811.1" y="517" width="7.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="814.13" y="527.5" ></text>
</g>
<g >
<title>vfs_write (28,566,785 samples, 1.61%)</title><rect x="1044.4" y="405" width="19.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1047.39" y="415.5" ></text>
</g>
<g >
<title>sqlite3Parser (11,101,656 samples, 0.63%)</title><rect x="518.3" y="469" width="7.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="521.33" y="479.5" ></text>
</g>
<g >
<title>__handle_mm_fault (9,149,179 samples, 0.52%)</title><rect x="563.0" y="245" width="6.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="565.97" y="255.5" ></text>
</g>
<g >
<title>neigh_hh_output (60,460,773 samples, 3.41%)</title><rect x="171.7" y="309" width="40.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="174.72" y="319.5" >nei..</text>
</g>
<g >
<title>__offtime (15,214,057 samples, 0.86%)</title><rect x="841.3" y="469" width="10.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="844.28" y="479.5" ></text>
</g>
<g >
<title>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (11,776,536 samples, 0.66%)</title><rect x="248.2" y="629" width="7.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="251.19" y="639.5" ></text>
</g>
<g >
<title>x64_sys_call (12,534,853 samples, 0.71%)</title><rect x="281.4" y="197" width="8.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="284.42" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_init (17,835,435 samples, 1.01%)</title><rect x="64.2" y="581" width="11.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="67.21" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_fdatasync (12,983,089 samples, 0.73%)</title><rect x="569.1" y="341" width="8.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="572.07" y="351.5" ></text>
</g>
<g >
<title>ChatroomServerEpoll::handleNewConnection (149,768,086 samples, 8.46%)</title><rect x="1077.1" y="645" width="99.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1080.13" y="655.5" >ChatroomServ..</text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (24,856,185 samples, 1.40%)</title><rect x="298.1" y="389" width="16.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="301.14" y="399.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::detail::lexer&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, nlohmann::json_abi_v3_11_2::detail::iterator_input_adapter&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::reset (13,241,105 samples, 0.75%)</title><rect x="671.3" y="453" width="8.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="674.32" y="463.5" ></text>
</g>
<g >
<title>rw_verify_area (14,758,568 samples, 0.83%)</title><rect x="1053.6" y="389" width="9.8" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1056.59" y="399.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (9,763,438 samples, 0.55%)</title><rect x="928.5" y="453" width="6.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="931.53" y="463.5" ></text>
</g>
<g >
<title>x64_sys_call (20,565,994 samples, 1.16%)</title><rect x="1063.4" y="469" width="13.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1066.42" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (81,314,822 samples, 4.59%)</title><rect x="859.3" y="501" width="54.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="862.25" y="511.5" >std::..</text>
</g>
<g >
<title>utils::Logger::rotateLogFileIfNeeded (20,565,994 samples, 1.16%)</title><rect x="1063.4" y="581" width="13.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1066.42" y="591.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (10,166,186 samples, 0.57%)</title><rect x="444.4" y="421" width="6.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="447.42" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (12,393,635 samples, 0.70%)</title><rect x="1168.7" y="485" width="8.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1171.65" y="495.5" ></text>
</g>
<g >
<title>__rmqueue_pcplist (12,550,539 samples, 0.71%)</title><rect x="289.8" y="85" width="8.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="292.77" y="95.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::detail::serializer&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::dump_escaped (9,279,665 samples, 0.52%)</title><rect x="695.0" y="501" width="6.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="698.05" y="511.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (53,375,851 samples, 3.01%)</title><rect x="64.2" y="629" width="35.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="67.21" y="639.5" >sch..</text>
</g>
<g >
<title>ext4_writepages (12,983,089 samples, 0.73%)</title><rect x="569.1" y="245" width="8.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="572.07" y="255.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (1,142,518 samples, 0.06%)</title><rect x="332.7" y="245" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="335.71" y="255.5" ></text>
</g>
<g >
<title>mmap_region (12,534,853 samples, 0.71%)</title><rect x="281.4" y="117" width="8.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="284.42" y="127.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (12,550,539 samples, 0.71%)</title><rect x="289.8" y="245" width="8.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="292.77" y="255.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (11,208,970 samples, 0.63%)</title><rect x="541.1" y="261" width="7.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="544.11" y="271.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (5,298,602 samples, 0.30%)</title><rect x="60.7" y="613" width="3.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="63.68" y="623.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (12,550,539 samples, 0.71%)</title><rect x="289.8" y="261" width="8.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="292.77" y="271.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (12,337,001 samples, 0.70%)</title><rect x="1021.9" y="533" width="8.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1024.87" y="543.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (10,558,212 samples, 0.60%)</title><rect x="1084.4" y="533" width="7.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1087.40" y="543.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::json_value::json_value (27,159,238 samples, 1.53%)</title><rect x="701.2" y="485" width="18.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="704.23" y="495.5" ></text>
</g>
<g >
<title>file_write_and_wait_range (12,983,089 samples, 0.73%)</title><rect x="569.1" y="309" width="8.6" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="572.07" y="319.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (8,867,452 samples, 0.50%)</title><rect x="913.4" y="533" width="5.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="916.43" y="543.5" ></text>
</g>
<g >
<title>cp_new_stat (8,829,518 samples, 0.50%)</title><rect x="1063.4" y="421" width="5.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1066.42" y="431.5" ></text>
</g>
<g >
<title>x64_sys_call (166,484,529 samples, 9.40%)</title><rect x="333.5" y="357" width="110.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="336.50" y="367.5" >x64_sys_call</text>
</g>
<g >
<title>lookup_bh_lru (12,343,010 samples, 0.70%)</title><rect x="306.5" y="69" width="8.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="309.47" y="79.5" ></text>
</g>
<g >
<title>utils::Logger::writeLogToFile (13,796,571 samples, 0.78%)</title><rect x="919.3" y="517" width="9.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="922.34" y="527.5" ></text>
</g>
<g >
<title>apparmor_file_permission (14,758,568 samples, 0.83%)</title><rect x="1053.6" y="373" width="9.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1056.59" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::allocator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::vector (12,827,672 samples, 0.72%)</title><rect x="701.2" y="245" width="8.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="704.23" y="255.5" ></text>
</g>
<g >
<title>___interceptor_malloc (9,149,179 samples, 0.52%)</title><rect x="563.0" y="357" width="6.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="565.97" y="367.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (8,867,452 samples, 0.50%)</title><rect x="913.4" y="485" width="5.9" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="916.43" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_write (8,867,452 samples, 0.50%)</title><rect x="913.4" y="453" width="5.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="916.43" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (27,159,238 samples, 1.53%)</title><rect x="701.2" y="373" width="18.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="704.23" y="383.5" ></text>
</g>
<g >
<title>sqlite3PagerExclusiveLock (11,311,012 samples, 0.64%)</title><rect x="470.9" y="437" width="7.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="473.94" y="447.5" ></text>
</g>
<g >
<title>sock_close (10,703,892 samples, 0.60%)</title><rect x="41.1" y="629" width="7.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="44.14" y="639.5" ></text>
</g>
<g >
<title>update_load_avg (10,691,284 samples, 0.60%)</title><rect x="84.7" y="517" width="7.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="87.65" y="527.5" ></text>
</g>
<g >
<title>sqlite3_step (283,226,684 samples, 15.99%)</title><rect x="289.8" y="485" width="188.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="292.77" y="495.5" >sqlite3_step</text>
</g>
<g >
<title>sqlite3Malloc (10,300,709 samples, 0.58%)</title><rect x="478.5" y="453" width="6.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="481.48" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,867,452 samples, 0.50%)</title><rect x="913.4" y="421" width="5.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="916.43" y="431.5" ></text>
</g>
<g >
<title>vm_mmap (30,186,033 samples, 1.70%)</title><rect x="10.0" y="645" width="20.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (146,979,909 samples, 8.30%)</title><rect x="114.1" y="597" width="97.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="117.08" y="607.5" >do_syscall_64</text>
</g>
<g >
<title>ip_finish_output (60,460,773 samples, 3.41%)</title><rect x="171.7" y="357" width="40.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="174.72" y="367.5" >ip_..</text>
</g>
<g >
<title>utils::getCurrentTime (26,974,553 samples, 1.52%)</title><rect x="841.3" y="533" width="18.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="844.28" y="543.5" ></text>
</g>
<g >
<title>sqlite3SelectPrep (15,218,689 samples, 0.86%)</title><rect x="263.6" y="421" width="10.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="266.59" y="431.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (29,638,396 samples, 1.67%)</title><rect x="451.2" y="405" width="19.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="454.19" y="415.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (10,300,753 samples, 0.58%)</title><rect x="485.3" y="501" width="6.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="488.34" y="511.5" ></text>
</g>
<g >
<title>all (1,771,059,092 samples, 100%)</title><rect x="10.0" y="869" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>sqlite3VdbeHalt (12,983,089 samples, 0.73%)</title><rect x="569.1" y="469" width="8.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="572.07" y="479.5" ></text>
</g>
<g >
<title>sqlite3SrcListAppendFromTerm (11,101,656 samples, 0.63%)</title><rect x="518.3" y="453" width="7.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="521.33" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (13,808,217 samples, 0.78%)</title><rect x="1044.4" y="245" width="9.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1047.39" y="255.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (12,534,853 samples, 0.71%)</title><rect x="281.4" y="293" width="8.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="284.42" y="303.5" ></text>
</g>
<g >
<title>DatabaseManager::setUserLastActiveTime (307,310,530 samples, 17.35%)</title><rect x="273.7" y="533" width="204.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="276.73" y="543.5" >DatabaseManager::setUserLa..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (9,763,438 samples, 0.55%)</title><rect x="928.5" y="565" width="6.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="931.53" y="575.5" ></text>
</g>
<g >
<title>ip_finish_output2 (60,460,773 samples, 3.41%)</title><rect x="171.7" y="325" width="40.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="174.72" y="335.5" >ip_..</text>
</g>
<g >
<title>__filemap_fdatawrite_range (12,983,089 samples, 0.73%)</title><rect x="569.1" y="293" width="8.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="572.07" y="303.5" ></text>
</g>
<g >
<title>ext4_ext_get_access (15,503,884 samples, 0.88%)</title><rect x="460.6" y="197" width="10.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="463.61" y="207.5" ></text>
</g>
<g >
<title>psi_group_change (11,926,125 samples, 0.67%)</title><rect x="91.8" y="549" width="8.0" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="94.82" y="559.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (24,856,185 samples, 1.40%)</title><rect x="298.1" y="181" width="16.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="301.14" y="191.5" ></text>
</g>
<g >
<title>sqlite3WalkSelect (15,218,689 samples, 0.86%)</title><rect x="263.6" y="389" width="10.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="266.59" y="399.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::json_value::destroy (148,504,835 samples, 8.39%)</title><rect x="719.3" y="533" width="99.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="722.33" y="543.5" >nlohmann::j..</text>
</g>
<g >
<title>n_tty_write (8,867,452 samples, 0.50%)</title><rect x="913.4" y="293" width="5.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="916.43" y="303.5" ></text>
</g>
<g >
<title>tcp_write_xmit (60,460,773 samples, 3.41%)</title><rect x="171.7" y="453" width="40.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="174.72" y="463.5" >tcp..</text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (11,311,012 samples, 0.64%)</title><rect x="470.9" y="421" width="7.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="473.94" y="431.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::basic_json (12,827,672 samples, 0.72%)</title><rect x="701.2" y="293" width="8.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="704.23" y="303.5" ></text>
</g>
<g >
<title>vfs_fstatat (12,393,635 samples, 0.70%)</title><rect x="1168.7" y="421" width="8.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1171.65" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10,897,356 samples, 0.62%)</title><rect x="1014.6" y="581" width="7.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1017.61" y="591.5" ></text>
</g>
<g >
<title>do_vmi_munmap (30,186,033 samples, 1.70%)</title><rect x="10.0" y="581" width="20.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (11,890,697 samples, 0.67%)</title><rect x="826.4" y="421" width="7.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="829.41" y="431.5" ></text>
</g>
<g >
<title>operator new (24,197,220 samples, 1.37%)</title><rect x="1021.9" y="565" width="16.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1024.87" y="575.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (12,550,539 samples, 0.71%)</title><rect x="289.8" y="421" width="8.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="292.77" y="431.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::json_value::json_value (11,890,697 samples, 0.67%)</title><rect x="826.4" y="453" width="7.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="829.41" y="463.5" ></text>
</g>
<g >
<title>__asan::asan_malloc (9,149,179 samples, 0.52%)</title><rect x="563.0" y="341" width="6.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="565.97" y="351.5" ></text>
</g>
<g >
<title>filemap_fdatawrite_wbc (166,484,529 samples, 9.40%)</title><rect x="333.5" y="277" width="110.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="336.50" y="287.5" >filemap_fdata..</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;reactor::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;reactor::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (10,558,212 samples, 0.60%)</title><rect x="1084.4" y="613" width="7.0" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1087.40" y="623.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (9,149,179 samples, 0.52%)</title><rect x="563.0" y="373" width="6.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="565.97" y="383.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::detail::lexer&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, nlohmann::json_abi_v3_11_2::detail::iterator_input_adapter&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::scan (153,737,283 samples, 8.68%)</title><rect x="577.7" y="485" width="102.4" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="580.72" y="495.5" >nlohmann::js..</text>
</g>
<g >
<title>sqlite3ParserAlloc (10,300,709 samples, 0.58%)</title><rect x="478.5" y="469" width="6.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="481.48" y="479.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (53,375,851 samples, 3.01%)</title><rect x="64.2" y="613" width="35.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="67.21" y="623.5" >sch..</text>
</g>
<g >
<title>reactor::EventLoop::addChannel (10,915,987 samples, 0.62%)</title><rect x="1077.1" y="629" width="7.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1080.13" y="639.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::~basic_json (11,347,332 samples, 0.64%)</title><rect x="680.1" y="501" width="7.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="683.15" y="511.5" ></text>
</g>
<g >
<title>main (1,740,802,400 samples, 98.29%)</title><rect x="30.1" y="789" width="1159.9" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="33.11" y="799.5" >main</text>
</g>
<g >
<title>vfs_fstatat (11,736,476 samples, 0.66%)</title><rect x="1069.3" y="421" width="7.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1072.31" y="431.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::sync (28,566,785 samples, 1.61%)</title><rect x="1044.4" y="565" width="19.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1047.39" y="575.5" ></text>
</g>
<g >
<title>exec_binprm (30,186,033 samples, 1.70%)</title><rect x="10.0" y="709" width="20.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>__alloc_pages_noprof (12,550,539 samples, 0.71%)</title><rect x="289.8" y="133" width="8.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="292.77" y="143.5" ></text>
</g>
<g >
<title>ext4_da_do_write_end (13,808,217 samples, 0.78%)</title><rect x="1044.4" y="325" width="9.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1047.39" y="335.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (12,513,175 samples, 0.71%)</title><rect x="298.1" y="101" width="8.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="301.14" y="111.5" ></text>
</g>
<g >
<title>do_syscall_64 (30,186,033 samples, 1.70%)</title><rect x="10.0" y="805" width="20.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="815.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::detail::json_ref&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::json_ref&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, 0&gt; (11,890,697 samples, 0.67%)</title><rect x="826.4" y="549" width="7.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="829.41" y="559.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;nlohmann::json_abi_v3_11_2::detail::output_string_adapter&lt;char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::shared_ptr&lt;std::allocator&lt;void&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (11,017,951 samples, 0.62%)</title><rect x="687.7" y="501" width="7.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="690.71" y="511.5" ></text>
</g>
<g >
<title>___interceptor_memcpy (115,900,252 samples, 6.54%)</title><rect x="1091.4" y="565" width="77.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1094.43" y="575.5" >___inter..</text>
</g>
<g >
<title>DatabaseManager::getRoomUsers (22,786,964 samples, 1.29%)</title><rect x="518.3" y="549" width="15.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="521.33" y="559.5" ></text>
</g>
<g >
<title>path_lookupat (11,736,476 samples, 0.66%)</title><rect x="1069.3" y="373" width="7.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1072.31" y="383.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (10,691,284 samples, 0.60%)</title><rect x="84.7" y="501" width="7.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="87.65" y="511.5" ></text>
</g>
<g >
<title>sqlite3BitvecCreate (9,149,179 samples, 0.52%)</title><rect x="563.0" y="421" width="6.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="565.97" y="431.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (12,534,853 samples, 0.71%)</title><rect x="281.4" y="453" width="8.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="284.42" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (16,880,930 samples, 0.95%)</title><rect x="227.5" y="629" width="11.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="230.48" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (12,393,635 samples, 0.70%)</title><rect x="1168.7" y="453" width="8.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1171.65" y="463.5" ></text>
</g>
<g >
<title>__libc_pread (11,208,970 samples, 0.63%)</title><rect x="541.1" y="453" width="7.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="544.11" y="463.5" ></text>
</g>
<g >
<title>nvme_map_data (166,484,529 samples, 9.40%)</title><rect x="333.5" y="117" width="110.9" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="336.50" y="127.5" >nvme_map_data</text>
</g>
<g >
<title>std::vector&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::allocator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::_M_erase_at_end (126,320,182 samples, 7.13%)</title><rect x="727.0" y="501" width="84.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="729.96" y="511.5" >std::vect..</text>
</g>
<g >
<title>__x64_sys_fdatasync (166,484,529 samples, 9.40%)</title><rect x="333.5" y="341" width="110.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="336.50" y="351.5" >__x64_sys_fda..</text>
</g>
<g >
<title>vfs_write (24,856,185 samples, 1.40%)</title><rect x="298.1" y="277" width="16.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="301.14" y="287.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::parse&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (153,737,283 samples, 8.68%)</title><rect x="577.7" y="549" width="102.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="580.72" y="559.5" >nlohmann::js..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (28,219,837 samples, 1.59%)</title><rect x="314.7" y="373" width="18.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="317.70" y="383.5" ></text>
</g>
<g >
<title>x64_sys_call (12,393,635 samples, 0.70%)</title><rect x="1168.7" y="469" width="8.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1171.65" y="479.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (11,776,536 samples, 0.66%)</title><rect x="248.2" y="565" width="7.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="251.19" y="575.5" ></text>
</g>
<g >
<title>___interceptor_snprintf (11,760,496 samples, 0.66%)</title><rect x="851.4" y="517" width="7.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="854.42" y="527.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (12,827,672 samples, 0.72%)</title><rect x="701.2" y="69" width="8.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="704.23" y="79.5" ></text>
</g>
<g >
<title>__x64_sys_pwrite64 (12,550,539 samples, 0.71%)</title><rect x="289.8" y="293" width="8.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="292.77" y="303.5" ></text>
</g>
<g >
<title>___interceptor_free (12,688,601 samples, 0.72%)</title><rect x="500.6" y="469" width="8.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="503.56" y="479.5" ></text>
</g>
<g >
<title>DatabaseManager::executeQuery (307,310,530 samples, 17.35%)</title><rect x="273.7" y="517" width="204.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="276.73" y="527.5" >DatabaseManager::executeQu..</text>
</g>
<g >
<title>blk_finish_plug (166,484,529 samples, 9.40%)</title><rect x="333.5" y="213" width="110.9" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="336.50" y="223.5" >blk_finish_plug</text>
</g>
<g >
<title>__napi_poll (60,460,773 samples, 3.41%)</title><rect x="171.7" y="197" width="40.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="174.72" y="207.5" >__n..</text>
</g>
<g >
<title>x64_sys_call (11,311,012 samples, 0.64%)</title><rect x="470.9" y="341" width="7.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="473.94" y="351.5" ></text>
</g>
<g >
<title>x64_sys_call (29,638,396 samples, 1.67%)</title><rect x="451.2" y="341" width="19.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="454.19" y="351.5" ></text>
</g>
<g >
<title>lru_add_fn (1,142,518 samples, 0.06%)</title><rect x="332.7" y="213" width="0.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="335.71" y="223.5" ></text>
</g>
<g >
<title>__netif_receive_skb (60,460,773 samples, 3.41%)</title><rect x="171.7" y="165" width="40.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="174.72" y="175.5" >__n..</text>
</g>
<g >
<title>__dma_map_sg_attrs (166,484,529 samples, 9.40%)</title><rect x="333.5" y="85" width="110.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="336.50" y="95.5" >__dma_map_sg_..</text>
</g>
<g >
<title>filemap_fdatawrite_wbc (12,983,089 samples, 0.73%)</title><rect x="569.1" y="277" width="8.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="572.07" y="287.5" ></text>
</g>
<g >
<title>get_page_from_freelist (12,550,539 samples, 0.71%)</title><rect x="289.8" y="117" width="8.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="292.77" y="127.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::basic_json (27,159,238 samples, 1.53%)</title><rect x="701.2" y="501" width="18.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="704.23" y="511.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (1,142,518 samples, 0.06%)</title><rect x="332.7" y="229" width="0.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="335.71" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::allocator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::push_back (27,159,238 samples, 1.53%)</title><rect x="701.2" y="533" width="18.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="704.23" y="543.5" ></text>
</g>
<g >
<title>sqlite3_prepare_v2 (12,534,853 samples, 0.71%)</title><rect x="281.4" y="485" width="8.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="284.42" y="495.5" ></text>
</g>
<g >
<title>sqlite3RunParser (11,400,045 samples, 0.64%)</title><rect x="533.5" y="485" width="7.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="536.52" y="495.5" ></text>
</g>
<g >
<title>sqlite3VdbeHalt (270,676,145 samples, 15.28%)</title><rect x="298.1" y="453" width="180.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="301.14" y="463.5" >sqlite3VdbeHalt</text>
</g>
<g >
<title>fdatasync (166,484,529 samples, 9.40%)</title><rect x="333.5" y="405" width="110.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="336.50" y="415.5" >fdatasync</text>
</g>
<g >
<title>___interceptor___tls_get_addr (10,915,987 samples, 0.62%)</title><rect x="1077.1" y="549" width="7.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1080.13" y="559.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (51,828,327 samples, 2.93%)</title><rect x="171.7" y="101" width="34.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="174.72" y="111.5" >ip..</text>
</g>
<g >
<title>sqlite3WalCallback (11,548,993 samples, 0.65%)</title><rect x="273.7" y="485" width="7.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="276.73" y="495.5" ></text>
</g>
<g >
<title>ChatroomServerEpoll::handleNewConnection (1,466,911,618 samples, 82.83%)</title><rect x="99.8" y="661" width="977.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="102.77" y="671.5" >ChatroomServerEpoll::handleNewConnection</text>
</g>
<g >
<title>__sys_recvfrom (11,406,039 samples, 0.64%)</title><rect x="106.5" y="549" width="7.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="109.48" y="559.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (24,856,185 samples, 1.40%)</title><rect x="298.1" y="197" width="16.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="301.14" y="207.5" ></text>
</g>
<g >
<title>sqlite3BtreeInsert (9,149,179 samples, 0.52%)</title><rect x="563.0" y="469" width="6.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="565.97" y="479.5" ></text>
</g>
<g >
<title>sqlite3_step (22,132,268 samples, 1.25%)</title><rect x="563.0" y="501" width="14.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="565.97" y="511.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::json_value::destroy (11,347,332 samples, 0.64%)</title><rect x="680.1" y="485" width="7.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="683.15" y="495.5" ></text>
</g>
<g >
<title>dma_map_sgtable (166,484,529 samples, 9.40%)</title><rect x="333.5" y="101" width="110.9" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="336.50" y="111.5" >dma_map_sgtable</text>
</g>
<g >
<title>tcp_sendmsg_locked (74,678,608 samples, 4.22%)</title><rect x="162.3" y="501" width="49.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="165.25" y="511.5" >tcp_s..</text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::json_value::json_value (12,827,672 samples, 0.72%)</title><rect x="701.2" y="133" width="8.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="704.23" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (29,638,396 samples, 1.67%)</title><rect x="451.2" y="325" width="19.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="454.19" y="335.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::json_value::json_value (12,827,672 samples, 0.72%)</title><rect x="701.2" y="277" width="8.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="704.23" y="287.5" ></text>
</g>
<g >
<title>__tz_convert (15,214,057 samples, 0.86%)</title><rect x="841.3" y="501" width="10.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="844.28" y="511.5" ></text>
</g>
<g >
<title>lookup_bh_lru (11,208,970 samples, 0.63%)</title><rect x="541.1" y="149" width="7.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="544.11" y="159.5" ></text>
</g>
<g >
<title>do_writepages (166,484,529 samples, 9.40%)</title><rect x="333.5" y="261" width="110.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="336.50" y="271.5" >do_writepages</text>
</g>
<g >
<title>jbd2_complete_transaction (11,802,330 samples, 0.67%)</title><rect x="314.7" y="277" width="7.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="317.70" y="287.5" ></text>
</g>
<g >
<title>generic_update_time (11,208,970 samples, 0.63%)</title><rect x="541.1" y="293" width="7.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="544.11" y="303.5" ></text>
</g>
<g >
<title>sqlite3VdbeSorterClose (12,688,601 samples, 0.72%)</title><rect x="500.6" y="485" width="8.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="503.56" y="495.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::~basic_json (11,347,332 samples, 0.64%)</title><rect x="680.1" y="533" width="7.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="683.15" y="543.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (81,314,822 samples, 4.59%)</title><rect x="859.3" y="453" width="54.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="862.25" y="463.5" >__asa..</text>
</g>
<g >
<title>__unlink (29,638,396 samples, 1.67%)</title><rect x="451.2" y="389" width="19.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="454.19" y="399.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10,300,709 samples, 0.58%)</title><rect x="478.5" y="389" width="6.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="481.48" y="399.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (30,186,033 samples, 1.70%)</title><rect x="10.0" y="725" width="20.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>inet_release (10,703,892 samples, 0.60%)</title><rect x="41.1" y="597" width="7.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="44.14" y="607.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; const*, std::vector&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::allocator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;*, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (12,827,672 samples, 0.72%)</title><rect x="701.2" y="229" width="8.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="704.23" y="239.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (11,208,970 samples, 0.63%)</title><rect x="541.1" y="197" width="7.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="544.11" y="207.5" ></text>
</g>
<g >
<title>x64_sys_call (8,867,452 samples, 0.50%)</title><rect x="913.4" y="405" width="5.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="916.43" y="415.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (2,753,104 samples, 0.16%)</title><rect x="39.3" y="741" width="1.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="42.31" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (10,915,987 samples, 0.62%)</title><rect x="1077.1" y="565" width="7.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1080.13" y="575.5" ></text>
</g>
<g >
<title>ext4_ext_remove_space (15,503,884 samples, 0.88%)</title><rect x="460.6" y="213" width="10.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="463.61" y="223.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  (998,010,757 samples, 56.35%)</title><rect x="263.6" y="613" width="664.9" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="266.59" y="623.5" >std::_Function_handler&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::alloca..</text>
</g>
<g >
<title>__tcp_close (10,703,892 samples, 0.60%)</title><rect x="41.1" y="565" width="7.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="44.14" y="575.5" ></text>
</g>
<g >
<title>ChatroomServerEpoll::start (149,768,086 samples, 8.46%)</title><rect x="1077.1" y="661" width="99.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1080.13" y="671.5" >ChatroomServ..</text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::basic_json (11,347,332 samples, 0.64%)</title><rect x="680.1" y="549" width="7.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="683.15" y="559.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (24,856,185 samples, 1.40%)</title><rect x="298.1" y="261" width="16.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="301.14" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (9,763,438 samples, 0.55%)</title><rect x="928.5" y="549" width="6.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="931.53" y="559.5" ></text>
</g>
<g >
<title>reactor::EventLoop::loop (1,740,802,400 samples, 98.29%)</title><rect x="30.1" y="757" width="1159.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="33.11" y="767.5" >reactor::EventLoop::loop</text>
</g>
<g >
<title>std::shared_ptr&lt;std::enable_if&lt;!std::is_array&lt;nlohmann::json_abi_v3_11_2::detail::output_string_adapter&lt;char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::value, nlohmann::json_abi_v3_11_2::detail::output_string_adapter&lt;char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::type&gt; std::make_shared&lt;nlohmann::json_abi_v3_11_2::detail::output_string_adapter&lt;char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (11,017,951 samples, 0.62%)</title><rect x="687.7" y="517" width="7.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="690.71" y="527.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (10,025,997 samples, 0.57%)</title><rect x="556.3" y="469" width="6.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="559.29" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (30,186,033 samples, 1.70%)</title><rect x="10.0" y="821" width="20.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>__libc_pwrite (24,856,185 samples, 1.40%)</title><rect x="298.1" y="357" width="16.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="301.14" y="367.5" ></text>
</g>
<g >
<title>sqlite3RunParser (12,534,853 samples, 0.71%)</title><rect x="281.4" y="437" width="8.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="284.42" y="447.5" ></text>
</g>
<g >
<title>dequeue_entity (10,691,284 samples, 0.60%)</title><rect x="84.7" y="533" width="7.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="87.65" y="543.5" ></text>
</g>
<g >
<title>ip_local_out (60,460,773 samples, 3.41%)</title><rect x="171.7" y="389" width="40.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="174.72" y="399.5" >ip_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11,406,039 samples, 0.64%)</title><rect x="106.5" y="613" width="7.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="109.48" y="623.5" ></text>
</g>
<g >
<title>nf_hook_slow (10,703,892 samples, 0.60%)</title><rect x="41.1" y="421" width="7.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="44.14" y="431.5" ></text>
</g>
<g >
<title>operator new (140,496,178 samples, 7.93%)</title><rect x="577.7" y="357" width="93.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="580.72" y="367.5" >operator new</text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, ChatroomServerEpoll::start (149,768,086 samples, 8.46%)</title><rect x="1077.1" y="693" width="99.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1080.13" y="703.5" >std::enable_..</text>
</g>
<g >
<title>asm_exc_page_fault (10,300,709 samples, 0.58%)</title><rect x="478.5" y="373" width="6.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="481.48" y="383.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (10,915,987 samples, 0.62%)</title><rect x="1077.1" y="533" width="7.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1080.13" y="543.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (12,550,539 samples, 0.71%)</title><rect x="289.8" y="405" width="8.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="292.77" y="415.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (13,808,217 samples, 0.78%)</title><rect x="1044.4" y="229" width="9.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1047.39" y="239.5" ></text>
</g>
<g >
<title>ext4_sync_file (28,219,837 samples, 1.59%)</title><rect x="314.7" y="309" width="18.8" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="317.70" y="319.5" ></text>
</g>
<g >
<title>printf_common (11,760,496 samples, 0.66%)</title><rect x="851.4" y="485" width="7.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="854.42" y="495.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::~basic_json (11,463,602 samples, 0.65%)</title><rect x="719.3" y="517" width="7.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="722.33" y="527.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (11,685,308 samples, 0.66%)</title><rect x="525.7" y="437" width="7.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="528.73" y="447.5" ></text>
</g>
<g >
<title>___interceptor_fwrite.part.0 (8,867,452 samples, 0.50%)</title><rect x="913.4" y="517" width="5.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="916.43" y="527.5" ></text>
</g>
<g >
<title>__filemap_fdatawrite_range (166,484,529 samples, 9.40%)</title><rect x="333.5" y="293" width="110.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="336.50" y="303.5" >__filemap_fda..</text>
</g>
<g >
<title>__lsan::DisabledInThisThread (14,203,334 samples, 0.80%)</title><rect x="238.7" y="565" width="9.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="241.73" y="575.5" ></text>
</g>
<g >
<title>sqlite3PagerSharedLock (11,208,970 samples, 0.63%)</title><rect x="541.1" y="485" width="7.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="544.11" y="495.5" ></text>
</g>
<g >
<title>DatabaseManager::executeQuery (22,132,268 samples, 1.25%)</title><rect x="563.0" y="533" width="14.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="565.97" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (24,856,185 samples, 1.40%)</title><rect x="298.1" y="341" width="16.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="301.14" y="351.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (12,534,853 samples, 0.71%)</title><rect x="281.4" y="309" width="8.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="284.42" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::shared_ptr&lt;reactor::Channel&gt; &gt;, false&gt; &gt;::allocate (10,558,212 samples, 0.60%)</title><rect x="1084.4" y="565" width="7.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1087.40" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (29,638,396 samples, 1.67%)</title><rect x="451.2" y="357" width="19.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="454.19" y="367.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (9,149,179 samples, 0.52%)</title><rect x="563.0" y="309" width="6.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="565.97" y="319.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (11,208,970 samples, 0.63%)</title><rect x="541.1" y="357" width="7.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="544.11" y="367.5" ></text>
</g>
<g >
<title>void nlohmann::json_abi_v3_11_2::detail::to_json&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 0&gt; (11,890,697 samples, 0.67%)</title><rect x="826.4" y="485" width="7.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="829.41" y="495.5" ></text>
</g>
<g >
<title>DatabaseManager::checkAndUpdateInactiveUsers (322,529,219 samples, 18.21%)</title><rect x="263.6" y="549" width="214.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="266.59" y="559.5" >DatabaseManager::checkAndUpd..</text>
</g>
<g >
<title>sqlite3SrcListAppend (11,101,656 samples, 0.63%)</title><rect x="518.3" y="437" width="7.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="521.33" y="447.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (15,218,689 samples, 0.86%)</title><rect x="263.6" y="501" width="10.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="266.59" y="511.5" ></text>
</g>
<g >
<title>bdev_getblk (11,208,970 samples, 0.63%)</title><rect x="541.1" y="181" width="7.5" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="544.11" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;* nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (11,890,697 samples, 0.67%)</title><rect x="826.4" y="437" width="7.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="829.41" y="447.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (10,897,356 samples, 0.62%)</title><rect x="1014.6" y="613" width="7.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1017.61" y="623.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (10,703,892 samples, 0.60%)</title><rect x="41.1" y="469" width="7.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="44.14" y="479.5" ></text>
</g>
<g >
<title>DatabaseManager::getAllUsers (20,601,462 samples, 1.16%)</title><rect x="478.5" y="549" width="13.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="481.48" y="559.5" ></text>
</g>
<g >
<title>tcp_close (10,703,892 samples, 0.60%)</title><rect x="41.1" y="581" width="7.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="44.14" y="591.5" ></text>
</g>
<g >
<title>vfs_write (12,550,539 samples, 0.71%)</title><rect x="289.8" y="277" width="8.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="292.77" y="287.5" ></text>
</g>
<g >
<title>ext4_group_desc_csum (14,134,512 samples, 0.80%)</title><rect x="451.2" y="213" width="9.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="454.19" y="223.5" ></text>
</g>
<g >
<title>std::ostream::flush (28,566,785 samples, 1.61%)</title><rect x="1044.4" y="581" width="19.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1047.39" y="591.5" ></text>
</g>
<g >
<title>ksys_write (28,566,785 samples, 1.61%)</title><rect x="1044.4" y="421" width="19.0" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1047.39" y="431.5" ></text>
</g>
<g >
<title>DatabaseManager::isUserOnline (15,218,689 samples, 0.86%)</title><rect x="263.6" y="533" width="10.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="266.59" y="543.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_out (10,703,892 samples, 0.60%)</title><rect x="41.1" y="405" width="7.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="44.14" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (14,203,334 samples, 0.80%)</title><rect x="238.7" y="629" width="9.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="241.73" y="639.5" ></text>
</g>
<g >
<title>ip_local_out (10,703,892 samples, 0.60%)</title><rect x="41.1" y="453" width="7.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="44.14" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (13,830,571 samples, 0.78%)</title><rect x="212.0" y="629" width="9.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="215.01" y="639.5" ></text>
</g>
<g >
<title>switch_fpu_return (1,292,739 samples, 0.07%)</title><rect x="51.0" y="677" width="0.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="54.03" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::push_back (140,496,178 samples, 7.93%)</title><rect x="577.7" y="437" width="93.6" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="580.72" y="447.5" >std::vector..</text>
</g>
<g >
<title>do_epoll_wait (71,858,831 samples, 4.06%)</title><rect x="51.9" y="661" width="47.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="54.89" y="671.5" >do_e..</text>
</g>
<g >
<title>__do_softirq (60,460,773 samples, 3.41%)</title><rect x="171.7" y="245" width="40.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="174.72" y="255.5" >__d..</text>
</g>
<g >
<title>sqlite3_prepare_v2 (11,101,656 samples, 0.63%)</title><rect x="518.3" y="533" width="7.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="521.33" y="543.5" ></text>
</g>
<g >
<title>DatabaseManager::setUserLastActiveTime (22,132,268 samples, 1.25%)</title><rect x="563.0" y="549" width="14.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="565.97" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (11,776,536 samples, 0.66%)</title><rect x="248.2" y="597" width="7.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="251.19" y="607.5" ></text>
</g>
<g >
<title>reactor::Channel::handleEvent (1,616,679,704 samples, 91.28%)</title><rect x="99.8" y="741" width="1077.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="102.77" y="751.5" >reactor::Channel::handleEvent</text>
</g>
<g >
<title>__asan::Allocator::Allocate (9,149,179 samples, 0.52%)</title><rect x="563.0" y="325" width="6.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="565.97" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,703,892 samples, 0.60%)</title><rect x="41.1" y="725" width="7.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="44.14" y="735.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; (126,320,182 samples, 7.13%)</title><rect x="727.0" y="469" width="84.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="729.96" y="479.5" >void std:..</text>
</g>
<g >
<title>sqlite3RunParser (15,218,689 samples, 0.86%)</title><rect x="263.6" y="469" width="10.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="266.59" y="479.5" ></text>
</g>
<g >
<title>sqlite3Strlen30 (12,548,466 samples, 0.71%)</title><rect x="492.2" y="485" width="8.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="495.20" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  (998,010,757 samples, 56.35%)</title><rect x="263.6" y="629" width="664.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="266.59" y="639.5" >std::function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;..</text>
</g>
<g >
<title>x64_sys_call (11,208,970 samples, 0.63%)</title><rect x="541.1" y="405" width="7.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="544.11" y="415.5" ></text>
</g>
<g >
<title>ksys_write (8,867,452 samples, 0.50%)</title><rect x="913.4" y="373" width="5.9" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="916.43" y="383.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (11,685,308 samples, 0.66%)</title><rect x="525.7" y="533" width="7.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="528.73" y="543.5" ></text>
</g>
<g >
<title>generic_file_read_iter (11,208,970 samples, 0.63%)</title><rect x="541.1" y="341" width="7.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="544.11" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_Rb_tree (27,159,238 samples, 1.53%)</title><rect x="701.2" y="437" width="18.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="704.23" y="447.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (9,763,438 samples, 0.55%)</title><rect x="928.5" y="469" width="6.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="931.53" y="479.5" ></text>
</g>
<g >
<title>___interceptor_malloc (10,300,709 samples, 0.58%)</title><rect x="478.5" y="421" width="6.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="481.48" y="431.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (11,463,602 samples, 0.65%)</title><rect x="719.3" y="453" width="7.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="722.33" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (71,858,831 samples, 4.06%)</title><rect x="51.9" y="677" width="47.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="54.89" y="687.5" >__x6..</text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (11,400,045 samples, 0.64%)</title><rect x="533.5" y="517" width="7.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="536.52" y="527.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (11,208,970 samples, 0.63%)</title><rect x="541.1" y="229" width="7.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="544.11" y="239.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (12,534,853 samples, 0.71%)</title><rect x="281.4" y="277" width="8.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="284.42" y="287.5" ></text>
</g>
<g >
<title>__fput (10,703,892 samples, 0.60%)</title><rect x="41.1" y="645" width="7.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="44.14" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (11,406,039 samples, 0.64%)</title><rect x="106.5" y="565" width="7.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="109.48" y="575.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (53,076,022 samples, 3.00%)</title><rect x="298.1" y="405" width="35.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="301.14" y="415.5" >[l..</text>
</g>
<g >
<title>nvme_queue_rqs (166,484,529 samples, 9.40%)</title><rect x="333.5" y="149" width="110.9" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="336.50" y="159.5" >nvme_queue_rqs</text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (11,685,308 samples, 0.66%)</title><rect x="525.7" y="485" width="7.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="528.73" y="495.5" ></text>
</g>
<g >
<title>___interceptor_memcmp (16,880,930 samples, 0.95%)</title><rect x="227.5" y="613" width="11.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="230.48" y="623.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (10,300,753 samples, 0.58%)</title><rect x="485.3" y="517" width="6.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="488.34" y="527.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (140,496,178 samples, 7.93%)</title><rect x="577.7" y="325" width="93.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="580.72" y="335.5" >__asan::All..</text>
</g>
<g >
<title>process_output_block (8,867,452 samples, 0.50%)</title><rect x="913.4" y="277" width="5.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="916.43" y="287.5" ></text>
</g>
<g >
<title>hrtimer_init_sleeper (17,835,435 samples, 1.01%)</title><rect x="64.2" y="597" width="11.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="67.21" y="607.5" ></text>
</g>
<g >
<title>ip_local_deliver (51,828,327 samples, 2.93%)</title><rect x="171.7" y="117" width="34.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="174.72" y="127.5" >ip..</text>
</g>
<g >
<title>__dev_queue_xmit (60,460,773 samples, 3.41%)</title><rect x="171.7" y="293" width="40.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="174.72" y="303.5" >__d..</text>
</g>
<g >
<title>[unknown] (30,186,033 samples, 1.70%)</title><rect x="10.0" y="837" width="20.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="847.5" ></text>
</g>
<g >
<title>generic_perform_write (13,808,217 samples, 0.78%)</title><rect x="1044.4" y="357" width="9.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1047.39" y="367.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (10,558,212 samples, 0.60%)</title><rect x="1084.4" y="501" width="7.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1087.40" y="511.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (10,300,709 samples, 0.58%)</title><rect x="478.5" y="437" width="6.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="481.48" y="447.5" ></text>
</g>
<g >
<title>sqlite3VdbeHalt (21,597,825 samples, 1.22%)</title><rect x="548.6" y="501" width="14.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="551.58" y="511.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~unordered_map (119,436,577 samples, 6.74%)</title><rect x="935.0" y="629" width="79.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="938.04" y="639.5" >std::unor..</text>
</g>
<g >
<title>sqlite3PagerCommitPhaseTwo (29,638,396 samples, 1.67%)</title><rect x="451.2" y="421" width="19.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="454.19" y="431.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (24,856,185 samples, 1.40%)</title><rect x="298.1" y="165" width="16.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="301.14" y="175.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (11,208,970 samples, 0.63%)</title><rect x="541.1" y="277" width="7.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="544.11" y="287.5" ></text>
</g>
<g >
<title>void std::vector&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::allocator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; const&amp;&gt; (27,159,238 samples, 1.53%)</title><rect x="701.2" y="517" width="18.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="704.23" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_close (10,703,892 samples, 0.60%)</title><rect x="41.1" y="677" width="7.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="44.14" y="687.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (119,436,577 samples, 6.74%)</title><rect x="935.0" y="597" width="79.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="938.04" y="607.5" >std::_Has..</text>
</g>
<g >
<title>ext4_sync_file (12,983,089 samples, 0.73%)</title><rect x="569.1" y="325" width="8.6" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="572.07" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (140,496,178 samples, 7.93%)</title><rect x="577.7" y="373" width="93.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="580.72" y="383.5" >std::__new_..</text>
</g>
<g >
<title>ext4_do_writepages (12,983,089 samples, 0.73%)</title><rect x="569.1" y="229" width="8.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="572.07" y="239.5" ></text>
</g>
<g >
<title>char&amp; std::vector&lt;char, std::allocator&lt;char&gt; &gt;::emplace_back&lt;char&gt; (140,496,178 samples, 7.93%)</title><rect x="577.7" y="421" width="93.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="580.72" y="431.5" >char&amp; std::..</text>
</g>
<g >
<title>ip_output (60,460,773 samples, 3.41%)</title><rect x="171.7" y="373" width="40.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="174.72" y="383.5" >ip_..</text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (11,736,476 samples, 0.66%)</title><rect x="1069.3" y="357" width="7.8" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1072.31" y="367.5" ></text>
</g>
<g >
<title>auto ChatroomServerEpoll::setupRoutes (998,010,757 samples, 56.35%)</title><rect x="263.6" y="565" width="664.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="266.59" y="575.5" >auto ChatroomServerEpoll::setupRoutes</text>
</g>
<g >
<title>ext4_group_desc_csum_set (14,134,512 samples, 0.80%)</title><rect x="451.2" y="229" width="9.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="454.19" y="239.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (38,814,458 samples, 2.19%)</title><rect x="180.4" y="69" width="25.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="183.39" y="79.5" >t..</text>
</g>
<g >
<title>__GI___libc_write (28,566,785 samples, 1.61%)</title><rect x="1044.4" y="501" width="19.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1047.39" y="511.5" ></text>
</g>
<g >
<title>_start (1,740,802,400 samples, 98.29%)</title><rect x="30.1" y="837" width="1159.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="33.11" y="847.5" >_start</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12,983,089 samples, 0.73%)</title><rect x="569.1" y="389" width="8.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="572.07" y="399.5" ></text>
</g>
<g >
<title>stop_this_handle (13,808,217 samples, 0.78%)</title><rect x="1044.4" y="277" width="9.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1047.39" y="287.5" ></text>
</g>
<g >
<title>blk_mq_flush_plug_list (166,484,529 samples, 9.40%)</title><rect x="333.5" y="181" width="110.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="336.50" y="191.5" >blk_mq_flush_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12,534,853 samples, 0.71%)</title><rect x="281.4" y="229" width="8.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="284.42" y="239.5" ></text>
</g>
<g >
<title>utils::Logger::LogStream::~LogStream (82,930,404 samples, 4.68%)</title><rect x="1021.9" y="629" width="55.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1024.87" y="639.5" >utils..</text>
</g>
<g >
<title>operator delete (11,463,602 samples, 0.65%)</title><rect x="719.3" y="469" width="7.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="722.33" y="479.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (115,900,252 samples, 6.54%)</title><rect x="1091.4" y="597" width="77.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1094.43" y="607.5" >std::bas..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (166,484,529 samples, 9.40%)</title><rect x="333.5" y="389" width="110.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="336.50" y="399.5" >entry_SYSCALL..</text>
</g>
<g >
<title>ext4_mark_iloc_dirty (12,513,175 samples, 0.71%)</title><rect x="298.1" y="149" width="8.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="301.14" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (27,159,238 samples, 1.53%)</title><rect x="701.2" y="405" width="18.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="704.23" y="415.5" ></text>
</g>
<g >
<title>ep_send_events (5,298,602 samples, 0.30%)</title><rect x="60.7" y="629" width="3.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="63.68" y="639.5" ></text>
</g>
<g >
<title>sqlite3ResolveSelectNames (15,218,689 samples, 0.86%)</title><rect x="263.6" y="405" width="10.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="266.59" y="415.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (24,856,185 samples, 1.40%)</title><rect x="298.1" y="245" width="16.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="301.14" y="255.5" ></text>
</g>
<g >
<title>std::filesystem::status (20,565,994 samples, 1.16%)</title><rect x="1063.4" y="549" width="13.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1066.42" y="559.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (14,203,334 samples, 0.80%)</title><rect x="238.7" y="613" width="9.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="241.73" y="623.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (12,534,853 samples, 0.71%)</title><rect x="281.4" y="165" width="8.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="284.42" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (166,484,529 samples, 9.40%)</title><rect x="333.5" y="373" width="110.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="336.50" y="383.5" >do_syscall_64</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (28,566,785 samples, 1.61%)</title><rect x="1044.4" y="485" width="19.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1047.39" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (12,983,089 samples, 0.73%)</title><rect x="569.1" y="373" width="8.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="572.07" y="383.5" ></text>
</g>
<g >
<title>inet_recvmsg (11,406,039 samples, 0.64%)</title><rect x="106.5" y="533" width="7.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="109.48" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (12,550,539 samples, 0.71%)</title><rect x="289.8" y="325" width="8.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="292.77" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_execve (30,186,033 samples, 1.70%)</title><rect x="10.0" y="773" width="20.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_fdatasync (28,219,837 samples, 1.59%)</title><rect x="314.7" y="325" width="18.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="317.70" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (75,079,879 samples, 4.24%)</title><rect x="49.7" y="709" width="50.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="52.75" y="719.5" >do_sy..</text>
</g>
<g >
<title>vfs_read (11,208,970 samples, 0.63%)</title><rect x="541.1" y="373" width="7.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="544.11" y="383.5" ></text>
</g>
<g >
<title>do_unlinkat (29,638,396 samples, 1.67%)</title><rect x="451.2" y="309" width="19.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="454.19" y="319.5" ></text>
</g>
<g >
<title>generic_update_time (24,856,185 samples, 1.40%)</title><rect x="298.1" y="213" width="16.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="301.14" y="223.5" ></text>
</g>
<g >
<title>char&amp; std::vector&lt;char, std::allocator&lt;char&gt; &gt;::emplace_back&lt;char&gt; (13,241,105 samples, 0.75%)</title><rect x="671.3" y="421" width="8.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="674.32" y="431.5" ></text>
</g>
<g >
<title>tcp_sendmsg (146,979,909 samples, 8.30%)</title><rect x="114.1" y="517" width="97.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="117.08" y="527.5" >tcp_sendmsg</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;* nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (12,827,672 samples, 0.72%)</title><rect x="701.2" y="117" width="8.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="704.23" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, unsigned int&gt; &gt; std::_Rb_tree&lt;int, std::pair&lt;int const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;int const, unsigned int&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, unsigned int&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (10,915,987 samples, 0.62%)</title><rect x="1077.1" y="581" width="7.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1080.13" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,703,892 samples, 0.60%)</title><rect x="41.1" y="709" width="7.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="44.14" y="719.5" ></text>
</g>
<g >
<title>sqlite3BtreeCommitPhaseOne (12,983,089 samples, 0.73%)</title><rect x="569.1" y="453" width="8.6" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="572.07" y="463.5" ></text>
</g>
<g >
<title>chat_server (1,770,988,433 samples, 100.00%)</title><rect x="10.0" y="853" width="1180.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.00" y="863.5" >chat_server</text>
</g>
<g >
<title>void nlohmann::json_abi_v3_11_2::detail::to_json&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, char [5], 0&gt; (12,220,606 samples, 0.69%)</title><rect x="818.3" y="485" width="8.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="821.27" y="495.5" ></text>
</g>
<g >
<title>mntput (12,393,635 samples, 0.70%)</title><rect x="1168.7" y="389" width="8.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1171.65" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (9,763,438 samples, 0.55%)</title><rect x="928.5" y="597" width="6.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="931.53" y="607.5" ></text>
</g>
<g >
<title>sqlite3BtreeInsert (12,550,539 samples, 0.71%)</title><rect x="289.8" y="453" width="8.3" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="292.77" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::allocator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::clear (126,320,182 samples, 7.13%)</title><rect x="727.0" y="517" width="84.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="729.96" y="527.5" >std::vect..</text>
</g>
<g >
<title>decltype  (11,890,697 samples, 0.67%)</title><rect x="826.4" y="501" width="7.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="829.41" y="511.5" ></text>
</g>
<g >
<title>__wake_up (13,808,217 samples, 0.78%)</title><rect x="1044.4" y="261" width="9.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1047.39" y="271.5" ></text>
</g>
<g >
<title>bprm_execve (30,186,033 samples, 1.70%)</title><rect x="10.0" y="741" width="20.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (81,314,822 samples, 4.59%)</title><rect x="859.3" y="437" width="54.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="862.25" y="447.5" >__san..</text>
</g>
<g >
<title>___interceptor_localtime_r (15,214,057 samples, 0.86%)</title><rect x="841.3" y="517" width="10.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="844.28" y="527.5" ></text>
</g>
<g >
<title>do_mmap (12,534,853 samples, 0.71%)</title><rect x="281.4" y="133" width="8.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="284.42" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_write (8,867,452 samples, 0.50%)</title><rect x="913.4" y="389" width="5.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="916.43" y="399.5" ></text>
</g>
<g >
<title>sqlite3Parser (15,218,689 samples, 0.86%)</title><rect x="263.6" y="453" width="10.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="266.59" y="463.5" ></text>
</g>
<g >
<title>sqlite3_prepare_v2 (10,300,709 samples, 0.58%)</title><rect x="478.5" y="533" width="6.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="481.48" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (20,565,994 samples, 1.16%)</title><rect x="1063.4" y="453" width="13.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1066.42" y="463.5" ></text>
</g>
<g >
<title>x64_sys_call (11,406,039 samples, 0.64%)</title><rect x="106.5" y="581" width="7.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="109.48" y="591.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (12,534,853 samples, 0.71%)</title><rect x="281.4" y="469" width="8.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="284.42" y="479.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (115,900,252 samples, 6.54%)</title><rect x="1091.4" y="581" width="77.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1094.43" y="591.5" >std::bas..</text>
</g>
<g >
<title>dequeue_task_fair (10,691,284 samples, 0.60%)</title><rect x="84.7" y="549" width="7.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="87.65" y="559.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::push_back (27,159,238 samples, 1.53%)</title><rect x="701.2" y="549" width="18.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="704.23" y="559.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (72,301,301 samples, 4.08%)</title><rect x="114.1" y="501" width="48.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="117.08" y="511.5" >tcp_..</text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, nlohmann::json_abi_v3_11_2::detail::iterator_input_adapter&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::get_token (153,737,283 samples, 8.68%)</title><rect x="577.7" y="501" width="102.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="580.72" y="511.5" >nlohmann::js..</text>
</g>
<g >
<title>__asan_stack_malloc_3 (11,347,332 samples, 0.64%)</title><rect x="680.1" y="469" width="7.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="683.15" y="479.5" ></text>
</g>
<g >
<title>__locks_delete_block (11,311,012 samples, 0.64%)</title><rect x="470.9" y="293" width="7.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="473.94" y="303.5" ></text>
</g>
<g >
<title>ext4_truncate (15,503,884 samples, 0.88%)</title><rect x="460.6" y="245" width="10.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="463.61" y="255.5" ></text>
</g>
<g >
<title>ChatroomServerEpoll::handleClientEvent (1,466,911,618 samples, 82.83%)</title><rect x="99.8" y="645" width="977.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="102.77" y="655.5" >ChatroomServerEpoll::handleClientEvent</text>
</g>
<g >
<title>___interceptor_strlen.part.0 (12,548,466 samples, 0.71%)</title><rect x="492.2" y="469" width="8.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="495.20" y="479.5" ></text>
</g>
<g >
<title>__find_get_block (11,208,970 samples, 0.63%)</title><rect x="541.1" y="165" width="7.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="544.11" y="175.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (12,550,539 samples, 0.71%)</title><rect x="289.8" y="437" width="8.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="292.77" y="447.5" ></text>
</g>
<g >
<title>sqlite3_prepare_v2 (11,400,045 samples, 0.64%)</title><rect x="533.5" y="533" width="7.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="536.52" y="543.5" ></text>
</g>
<g >
<title>ChatroomServerEpoll::cleanupPendingChannels (13,803,037 samples, 0.78%)</title><rect x="30.1" y="741" width="9.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="33.11" y="751.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (60,460,773 samples, 3.41%)</title><rect x="171.7" y="405" width="40.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="174.72" y="415.5" >__i..</text>
</g>
<g >
<title>void std::_Destroy&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (126,320,182 samples, 7.13%)</title><rect x="727.0" y="453" width="84.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="729.96" y="463.5" >void std:..</text>
</g>
<g >
<title>sqlite3_prepare_v2 (15,218,689 samples, 0.86%)</title><rect x="263.6" y="517" width="10.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="266.59" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (11,776,536 samples, 0.66%)</title><rect x="248.2" y="613" width="7.8" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="251.19" y="623.5" ></text>
</g>
<g >
<title>void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_realloc_insert&lt;char&gt; (140,496,178 samples, 7.93%)</title><rect x="577.7" y="405" width="93.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="580.72" y="415.5" >void std::v..</text>
</g>
<g >
<title>vm_mmap_pgoff (30,186,033 samples, 1.70%)</title><rect x="10.0" y="629" width="20.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (12,550,539 samples, 0.71%)</title><rect x="289.8" y="389" width="8.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="292.77" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (119,436,577 samples, 6.74%)</title><rect x="935.0" y="613" width="79.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="938.04" y="623.5" >std::_Has..</text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (12,534,853 samples, 0.71%)</title><rect x="281.4" y="389" width="8.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="284.42" y="399.5" ></text>
</g>
<g >
<title>__folio_batch_release (1,142,518 samples, 0.06%)</title><rect x="332.7" y="261" width="0.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="335.71" y="271.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (9,279,665 samples, 0.52%)</title><rect x="695.0" y="485" width="6.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="698.05" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (11,311,012 samples, 0.64%)</title><rect x="470.9" y="357" width="7.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="473.94" y="367.5" ></text>
</g>
<g >
<title>iterate_tty_write (8,867,452 samples, 0.50%)</title><rect x="913.4" y="309" width="5.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="916.43" y="319.5" ></text>
</g>
<g >
<title>_IO_fwrite (8,867,452 samples, 0.50%)</title><rect x="913.4" y="501" width="5.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="916.43" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;reactor::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;reactor::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (10,558,212 samples, 0.60%)</title><rect x="1084.4" y="597" width="7.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1087.40" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (75,079,879 samples, 4.24%)</title><rect x="49.7" y="725" width="50.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="52.75" y="735.5" >entry..</text>
</g>
<g >
<title>__ext4_mark_inode_dirty (11,208,970 samples, 0.63%)</title><rect x="541.1" y="245" width="7.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="544.11" y="255.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;* nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt; const&amp;&gt; (27,159,238 samples, 1.53%)</title><rect x="701.2" y="469" width="18.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="704.23" y="479.5" ></text>
</g>
<g >
<title>rmqueue (12,550,539 samples, 0.71%)</title><rect x="289.8" y="101" width="8.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="292.77" y="111.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (12,534,853 samples, 0.71%)</title><rect x="281.4" y="325" width="8.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="284.42" y="335.5" ></text>
</g>
<g >
<title>lru_gen_add_folio (1,142,518 samples, 0.06%)</title><rect x="332.7" y="197" width="0.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="335.71" y="207.5" ></text>
</g>
<g >
<title>__libc_start_call_main (1,740,802,400 samples, 98.29%)</title><rect x="30.1" y="805" width="1159.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="33.11" y="815.5" >__libc_start_call_main</text>
</g>
<g >
<title>syscall_exit_to_user_mode (3,221,048 samples, 0.18%)</title><rect x="49.7" y="693" width="2.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="52.75" y="703.5" ></text>
</g>
<g >
<title>sqlite3VdbeHalt (25,237,067 samples, 1.42%)</title><rect x="492.2" y="501" width="16.8" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="495.20" y="511.5" ></text>
</g>
<g >
<title>_IO_do_write@@GLIBC_2.2.5 (8,867,452 samples, 0.50%)</title><rect x="913.4" y="469" width="5.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="916.43" y="479.5" ></text>
</g>
<g >
<title>nvme_prep_rq.part.0 (166,484,529 samples, 9.40%)</title><rect x="333.5" y="133" width="110.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="336.50" y="143.5" >nvme_prep_rq...</text>
</g>
<g >
<title>ext4_buffered_write_iter (13,808,217 samples, 0.78%)</title><rect x="1044.4" y="373" width="9.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1047.39" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12,550,539 samples, 0.71%)</title><rect x="289.8" y="341" width="8.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="292.77" y="351.5" ></text>
</g>
<g >
<title>alloc_pages_mpol_noprof (12,550,539 samples, 0.71%)</title><rect x="289.8" y="149" width="8.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="292.77" y="159.5" ></text>
</g>
<g >
<title>filemap_read (11,208,970 samples, 0.63%)</title><rect x="541.1" y="325" width="7.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="544.11" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (24,197,220 samples, 1.37%)</title><rect x="1021.9" y="613" width="16.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1024.87" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (13,803,037 samples, 0.78%)</title><rect x="30.1" y="725" width="9.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="33.11" y="735.5" ></text>
</g>
<g >
<title>iput (29,638,396 samples, 1.67%)</title><rect x="451.2" y="293" width="19.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="454.19" y="303.5" ></text>
</g>
<g >
<title>utils::Logger::LogStream::LogStream (26,974,553 samples, 1.52%)</title><rect x="841.3" y="549" width="18.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="844.28" y="559.5" ></text>
</g>
<g >
<title>operator new (9,763,438 samples, 0.55%)</title><rect x="928.5" y="501" width="6.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="931.53" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (11,017,951 samples, 0.62%)</title><rect x="687.7" y="437" width="7.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="690.71" y="447.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (30,186,033 samples, 1.70%)</title><rect x="10.0" y="757" width="20.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::allocator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;* nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::create&lt;std::vector&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::allocator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::vector&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::allocator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; const&amp;&gt; (12,827,672 samples, 0.72%)</title><rect x="701.2" y="261" width="8.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="704.23" y="271.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (10,703,892 samples, 0.60%)</title><rect x="41.1" y="501" width="7.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="44.14" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;int, unsigned int, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, unsigned int&gt; &gt; &gt;::operator[] (10,915,987 samples, 0.62%)</title><rect x="1077.1" y="597" width="7.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1080.13" y="607.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (28,566,785 samples, 1.61%)</title><rect x="1044.4" y="549" width="19.0" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1047.39" y="559.5" ></text>
</g>
<g >
<title>net_rx_action (60,460,773 samples, 3.41%)</title><rect x="171.7" y="213" width="40.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="174.72" y="223.5" >net..</text>
</g>
<g >
<title>sqlite3Parser (11,400,045 samples, 0.64%)</title><rect x="533.5" y="469" width="7.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="536.52" y="479.5" ></text>
</g>
<g >
<title>exc_page_fault (10,300,709 samples, 0.58%)</title><rect x="478.5" y="357" width="6.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="481.48" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (24,197,220 samples, 1.37%)</title><rect x="1021.9" y="581" width="16.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1024.87" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (12,534,853 samples, 0.71%)</title><rect x="281.4" y="245" width="8.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="284.42" y="255.5" ></text>
</g>
<g >
<title>operator new (81,314,822 samples, 4.59%)</title><rect x="859.3" y="485" width="54.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="862.25" y="495.5" >opera..</text>
</g>
<g >
<title>utils::Logger::writeLogToFile (49,132,779 samples, 2.77%)</title><rect x="1044.4" y="597" width="32.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1047.39" y="607.5" >ut..</text>
</g>
<g >
<title>ep_poll (58,674,453 samples, 3.31%)</title><rect x="60.7" y="645" width="39.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="63.68" y="655.5" >ep_..</text>
</g>
<g >
<title>__asan::asan_memalign (24,197,220 samples, 1.37%)</title><rect x="1021.9" y="549" width="16.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1024.87" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (27,159,238 samples, 1.53%)</title><rect x="701.2" y="389" width="18.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="704.23" y="399.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, nlohmann::json_abi_v3_11_2::detail::iterator_input_adapter&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::parse (153,737,283 samples, 8.68%)</title><rect x="577.7" y="533" width="102.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="580.72" y="543.5" >nlohmann::js..</text>
</g>
<g >
<title>__tcp_push_pending_frames (10,703,892 samples, 0.60%)</title><rect x="41.1" y="533" width="7.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="44.14" y="543.5" ></text>
</g>
<g >
<title>decltype  (12,220,606 samples, 0.69%)</title><rect x="818.3" y="501" width="8.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="821.27" y="511.5" ></text>
</g>
<g >
<title>x64_sys_call (12,983,089 samples, 0.73%)</title><rect x="569.1" y="357" width="8.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="572.07" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (11,208,970 samples, 0.63%)</title><rect x="541.1" y="389" width="7.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="544.11" y="399.5" ></text>
</g>
<g >
<title>touch_atime (11,208,970 samples, 0.63%)</title><rect x="541.1" y="309" width="7.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="544.11" y="319.5" ></text>
</g>
<g >
<title>ext4_ext_truncate (15,503,884 samples, 0.88%)</title><rect x="460.6" y="229" width="10.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="463.61" y="239.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (60,460,773 samples, 3.41%)</title><rect x="171.7" y="277" width="40.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="174.72" y="287.5" >__l..</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (119,436,577 samples, 6.74%)</title><rect x="935.0" y="565" width="79.6" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="938.04" y="575.5" >std::__de..</text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (81,314,822 samples, 4.59%)</title><rect x="859.3" y="533" width="54.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="862.25" y="543.5" >std::..</text>
</g>
<g >
<title>do_user_addr_fault (10,300,709 samples, 0.58%)</title><rect x="478.5" y="341" width="6.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="481.48" y="351.5" ></text>
</g>
<g >
<title>__libc_recv (11,406,039 samples, 0.64%)</title><rect x="106.5" y="629" width="7.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="109.48" y="639.5" ></text>
</g>
<g >
<title>load_elf_binary (30,186,033 samples, 1.70%)</title><rect x="10.0" y="677" width="20.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (16,880,930 samples, 0.95%)</title><rect x="227.5" y="597" width="11.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="230.48" y="607.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (119,436,577 samples, 6.74%)</title><rect x="935.0" y="517" width="79.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="938.04" y="527.5" >__sanitiz..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1,616,679,704 samples, 91.28%)</title><rect x="99.8" y="709" width="1077.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="102.77" y="719.5" >std::_Function_handler&lt;void </text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::detail::serializer&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::dump (9,279,665 samples, 0.52%)</title><rect x="695.0" y="533" width="6.2" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="698.05" y="543.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (11,685,308 samples, 0.66%)</title><rect x="525.7" y="501" width="7.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="528.73" y="511.5" ></text>
</g>
<g >
<title>handle_softirqs (60,460,773 samples, 3.41%)</title><rect x="171.7" y="229" width="40.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="174.72" y="239.5" >han..</text>
</g>
<g >
<title>__sock_release (10,703,892 samples, 0.60%)</title><rect x="41.1" y="613" width="7.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="44.14" y="623.5" ></text>
</g>
<g >
<title>tty_write (8,867,452 samples, 0.50%)</title><rect x="913.4" y="341" width="5.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="916.43" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__invoke_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, ChatroomServerEpoll::setupRoutes (998,010,757 samples, 56.35%)</title><rect x="263.6" y="581" width="664.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="266.59" y="591.5" >std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__invo..</text>
</g>
<g >
<title>jbd2_log_wait_commit (11,802,330 samples, 0.67%)</title><rect x="314.7" y="261" width="7.9" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="317.70" y="271.5" ></text>
</g>
<g >
<title>operator new (11,685,308 samples, 0.66%)</title><rect x="525.7" y="453" width="7.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="528.73" y="463.5" ></text>
</g>
<g >
<title>ext4_fill_raw_inode (12,513,175 samples, 0.71%)</title><rect x="298.1" y="117" width="8.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="301.14" y="127.5" ></text>
</g>
<g >
<title>x64_sys_call (12,550,539 samples, 0.71%)</title><rect x="289.8" y="309" width="8.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="292.77" y="319.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (12,393,635 samples, 0.70%)</title><rect x="1168.7" y="517" width="8.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1171.65" y="527.5" ></text>
</g>
<g >
<title>iommu_dma_sync_sg_for_device (166,484,529 samples, 9.40%)</title><rect x="333.5" y="53" width="110.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="336.50" y="63.5" >iommu_dma_syn..</text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (10,300,709 samples, 0.58%)</title><rect x="478.5" y="517" width="6.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="481.48" y="527.5" ></text>
</g>
<g >
<title>std::filesystem::status (12,393,635 samples, 0.70%)</title><rect x="1168.7" y="549" width="8.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1171.65" y="559.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::__detail::_Hash_node_base*&gt;::allocate (9,763,438 samples, 0.55%)</title><rect x="928.5" y="517" width="6.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="931.53" y="527.5" ></text>
</g>
<g >
<title>mas_walk (10,300,709 samples, 0.58%)</title><rect x="478.5" y="309" width="6.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="481.48" y="319.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, ChatroomServerEpoll::start (149,768,086 samples, 8.46%)</title><rect x="1077.1" y="677" width="99.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1080.13" y="687.5" >void std::__..</text>
</g>
<g >
<title>ext4_do_writepages (166,484,529 samples, 9.40%)</title><rect x="333.5" y="229" width="110.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="336.50" y="239.5" >ext4_do_write..</text>
</g>
<g >
<title>__asan::Allocator::Allocate (11,685,308 samples, 0.66%)</title><rect x="525.7" y="421" width="7.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="528.73" y="431.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (60,460,773 samples, 3.41%)</title><rect x="171.7" y="469" width="40.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="174.72" y="479.5" >__t..</text>
</g>
<g >
<title>utils::Logger::LogStream::LogStream (10,897,356 samples, 0.62%)</title><rect x="1014.6" y="629" width="7.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1017.61" y="639.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (1,928,309 samples, 0.11%)</title><rect x="49.7" y="677" width="1.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="52.75" y="687.5" ></text>
</g>
<g >
<title>do_fcntl (11,311,012 samples, 0.64%)</title><rect x="470.9" y="309" width="7.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="473.94" y="319.5" ></text>
</g>
<g >
<title>void nlohmann::json_abi_v3_11_2::detail::external_constructor&lt; (12,220,606 samples, 0.69%)</title><rect x="818.3" y="469" width="8.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="821.27" y="479.5" ></text>
</g>
<g >
<title>sqlite3MallocZero (9,149,179 samples, 0.52%)</title><rect x="563.0" y="405" width="6.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="565.97" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (9,763,438 samples, 0.55%)</title><rect x="928.5" y="581" width="6.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="931.53" y="591.5" ></text>
</g>
<g >
<title>lock_vma_under_rcu (10,300,709 samples, 0.58%)</title><rect x="478.5" y="325" width="6.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="481.48" y="335.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.isra.0 (8,632,446 samples, 0.49%)</title><rect x="206.3" y="117" width="5.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="209.26" y="127.5" ></text>
</g>
<g >
<title>from_kuid_munged (8,829,518 samples, 0.50%)</title><rect x="1063.4" y="405" width="5.9" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1066.42" y="415.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (20,565,994 samples, 1.16%)</title><rect x="1063.4" y="517" width="13.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1066.42" y="527.5" ></text>
</g>
<g >
<title>ChatroomServerEpoll::start (1,740,802,400 samples, 98.29%)</title><rect x="30.1" y="773" width="1159.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="33.11" y="783.5" >ChatroomServerEpoll::start</text>
</g>
<g >
<title>std::function&lt;void  (1,616,679,704 samples, 91.28%)</title><rect x="99.8" y="725" width="1077.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="102.77" y="735.5" >std::function&lt;void </text>
</g>
<g >
<title>map_id_up (8,829,518 samples, 0.50%)</title><rect x="1063.4" y="389" width="5.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1066.42" y="399.5" ></text>
</g>
<g >
<title>operator delete (119,436,577 samples, 6.74%)</title><rect x="935.0" y="533" width="79.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="938.04" y="543.5" >operator ..</text>
</g>
<g >
<title>__fcntl64_nocancel_adjusted (11,311,012 samples, 0.64%)</title><rect x="470.9" y="389" width="7.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="473.94" y="399.5" ></text>
</g>
<g >
<title>sqlite3Select (15,218,689 samples, 0.86%)</title><rect x="263.6" y="437" width="10.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="266.59" y="447.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsputn (28,566,785 samples, 1.61%)</title><rect x="1044.4" y="517" width="19.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1047.39" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (9,763,438 samples, 0.55%)</title><rect x="928.5" y="613" width="6.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="931.53" y="623.5" ></text>
</g>
<g >
<title>__fdget (13,184,378 samples, 0.74%)</title><rect x="51.9" y="645" width="8.8" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="54.89" y="655.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (11,685,308 samples, 0.66%)</title><rect x="525.7" y="517" width="7.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="528.73" y="527.5" ></text>
</g>
<g >
<title>tcp_push (60,460,773 samples, 3.41%)</title><rect x="171.7" y="485" width="40.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="174.72" y="495.5" >tcp..</text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (12,983,089 samples, 0.73%)</title><rect x="569.1" y="421" width="8.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="572.07" y="431.5" ></text>
</g>
<g >
<title>__fput_sync (10,703,892 samples, 0.60%)</title><rect x="41.1" y="661" width="7.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="44.14" y="671.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13,796,571 samples, 0.78%)</title><rect x="919.3" y="453" width="9.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="922.34" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy (27,159,238 samples, 1.53%)</title><rect x="701.2" y="421" width="18.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="704.23" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (12,534,853 samples, 0.71%)</title><rect x="281.4" y="213" width="8.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="284.42" y="223.5" ></text>
</g>
<g >
<title>nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::basic_json&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 0&gt; (11,890,697 samples, 0.67%)</title><rect x="826.4" y="533" width="7.9" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="829.41" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (12,534,853 samples, 0.71%)</title><rect x="281.4" y="181" width="8.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="284.42" y="191.5" ></text>
</g>
<g >
<title>operator new (14,203,334 samples, 0.80%)</title><rect x="238.7" y="597" width="9.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="241.73" y="607.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (140,496,178 samples, 7.93%)</title><rect x="577.7" y="309" width="93.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="580.72" y="319.5" >__sanitizer..</text>
</g>
<g >
<title>__asan::asan_memalign (14,203,334 samples, 0.80%)</title><rect x="238.7" y="581" width="9.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="241.73" y="591.5" ></text>
</g>
<g >
<title>do_user_addr_fault (9,149,179 samples, 0.52%)</title><rect x="563.0" y="277" width="6.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="565.97" y="287.5" ></text>
</g>
<g >
<title>sqlite3VdbeExec (25,237,067 samples, 1.42%)</title><rect x="492.2" y="517" width="16.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="495.20" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (24,856,185 samples, 1.40%)</title><rect x="298.1" y="325" width="16.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="301.14" y="335.5" ></text>
</g>
<g >
<title>bool nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, nlohmann::json_abi_v3_11_2::detail::iterator_input_adapter&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; (153,737,283 samples, 8.68%)</title><rect x="577.7" y="517" width="102.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="580.72" y="527.5" >bool nlohman..</text>
</g>
<g >
<title>operator new (10,558,212 samples, 0.60%)</title><rect x="1084.4" y="549" width="7.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1087.40" y="559.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (140,496,178 samples, 7.93%)</title><rect x="577.7" y="341" width="93.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="580.72" y="351.5" >__asan::asa..</text>
</g>
<g >
<title>vfs_statx (12,393,635 samples, 0.70%)</title><rect x="1168.7" y="405" width="8.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1171.65" y="415.5" ></text>
</g>
</g>
</svg>
